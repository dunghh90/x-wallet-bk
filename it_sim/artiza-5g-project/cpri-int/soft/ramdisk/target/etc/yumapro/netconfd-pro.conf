#
# netconfd-pro configuration file
# Refer to netconfd-pro container definition in
# netconf/modules/yumaworks/netconfd-pro.yang
# for full CLI documentation.
#
# version 18.10-7
#

netconfd-pro {

#### leaf access-control
#
#  Controls how access control is enforced by the server.
#    enforcing
#    permissive
#    disabled
#    off
#
# access-control enforcing
#
#### leaf allow-leaflist-delete-all
# If 'true', then the delete-all operation is enabled
# for deleting instances of leaf-list objects.
# If 'false', then the delete-all operation is not enabled
# for deleting instances of leaf-list objects.
#
# allow-leaflist-delete-all false
#
#### leaf allow-list-delete-all
# If 'true', then the delete-all operation is enabled
# for deleting instances of list objects.
# If 'false', then the delete-all operation is not enabled
# for deleting instances of list objects.
#
# allow-list-delete-all false
#
#### leaf-list allowed-user
#
#  Name of a user that is allowed to have access to
#  the server via network management sessions.
#  If any configured then the user name must be in this list,
#  unless the user is the superuser account.
#    type nt:NcxName
#
# no default for allowed-user
#
#### leaf alt-names
#
# Defines the alternate name search mode that
# should be used when resolving YANG node names
# in leafs or leaf-lists using the UrlPath data type.
#
# If 'true' then nodes with an 'alt-name' defined
# will be considered a match if the YANG name or the
# alternative name matches the search string.
#
# If 'false' then only the YANG node name will
# be used in node name searches.
#
# alt-names true
#
#### leaf-list annotation
#
# This parameter identifies a YANG module that
# should only be checked for deviation statements
# used as annotations.  These will be collected
# and applied to the real module(s) being processed.
# Annotations are similar to deviations except they are
# not advertised to the client.  They are hidden and
# used to keep tool-specific YANG extensions out of the
# real YANG modules.  Zero or more 'annotation' parameters
# may be present.
#
# no default for annotation
#
#### leaf audit-log
#
#  Filespec for the server audit log file to use in  addition  to  the
#  normal log file or STDOUT.
#
# The default is to not have an additional audit-log
# (no default filename)
#
#### leaf no-audit-log
#
#  Flag indicating that no audit log should be created.
#  Relevant if fileloc-fhs=true, otherwise no audit log is
#  created unless 'audit-log' is set.
#
# no default for empty leaf no-audit-log
#
#### leaf audit-log-append
#
#   If  present,  the  audit log will be appended not over-written.
#
# The default is to not append (leaf not present)
#
#### leaf audit-log-candidate
#
# If true, then transactions to the candidate datastore
# will be recorded in the audit log.
#
# If false, then transactions to the candidate datastore
# will not be recorded in the audit log.
#
# audit-log-candidate true
#
#### leaf audit-log-console-level
#
# Sets the minimum logging level needed to log datastore
# audit records to the server console log. This does not
# affect output to the audit log.
#
#    off
#    error
#    warn
#    info
#    debug
#    debug2
#    debug3
#    debug4
#
# audit-log-console-level debug
#
#### leaf audit-log-events
#
# Configures the audit log events that will be saved as
# audit records to the audit log.  This does not affect
# debug logging to the server console log. Type is bits.
#
# bit definitions:
#     edit-candidate:
#     edit-running:
#     update-startup
#     client-session:
#     control-session:
#     acm-write-error:
#     acm-exec-error
#
# audit-log-events edit-running
#
#### leaf audit-log-level
#
# Sets the minimum logging level needed to log datastore
# audit records to the audit log.  This does not affect
# debug logging to the server console log.
#
#    off
#    error
#    warn
#    info
#    debug
#    debug2
#    debug3
#    debug4
#
# audit-log-level info
#
#### leaf autodelete-pdu-error
#
# If true, then configuration nodes provided in the
# edit payload (e.g., <config> element) that are
# conditional on 'when' statements must evaluate to
# true or else an operation-failed error will be
# returned.
# If false, then such 'false when' will be silently
# removed from the target datastore.
#
# autodelete-pdu-error true
#
#### leaf binary-display-maxlen
#
# The maximum number of bytes to display when dumping
# the contents of a binary value. Normally a message
# will be displayed showing the name and length.
#
# If this parameter is set to a value greater than zero
# then a standard 8-byte per line hex dump of the
# binary type will also be displayed for a maximum number
# of bytes set by this parameter.
#
# binary-display-maxlen 0
#
#### leaf-list bundle
#
# The name of a SIL bundle to load at boot-time.
# A SIL bundle is 1 SIL library for multiple YANG modules.
# Zero or more bundles can be loaded, similar to the
# module parameter.
# Use the make_sil_bundle script to generate the SIL code
# for a SIL bundle.
#
# no default for bundle
#
#### leaf callhome-reconnect
# If 'true' the server will attempt to start a new callhome
# connection if the client closes the session.
# If 'false' the server will not attempt to start a new
# callhome session after the client closes the session.
#
# callhome-reconnect false
#
#### leaf callhome-retry-interval
# Specifies the number of seconds to wait after a connect
# attempt to the callhome server has failed before attempting
# another connect attempt to that server.
#
# callhome-retry-interval 60
#
#### leaf callhome-retry-max
# Specifies the number of retry attempts the server should
# attempt to the callhome server before giving up.
# The value 0 indicates the server should never give up.
#
# callhome-retry-max  10
#
#### leaf-list callhome-server
# Specifies a callhome/SSH server that this server
# should attempt to initiate a callhome connection
# at boot-time. This string has the the same format
# as the ha-server parameter.
#
# no default for callhome-server
#
#### leaf callhome-sshd-command
# Specifies the command string used to invoke the SSH server
# when a callhome session is initiated.
#
# callhome-sshd-command /usr/sbin/sshd
#
#### leaf callhome-sshd-config
# Specifies the SSH server configuration file to use when
# invoking the SSH server when a callhome session is
# initiated. The default config file to use is a dynamic
# string using the pattern ch_sshd_config.<client>.
# It is located in the $HOME/.yumapro directory.
#
# there is no default for callhome-sshd-config
#
#### leaf callhome-subsys-command
# Specifies the netconf subsystem to use in the default
# ch_sshd_config files to specify the NETCONF subsystem
# for the incoming NETCONF session expected on the
# callhome session.
#
# callhome-subsys-command /usr/sbin/netconf-subsystem-pro
#
#### leaf-list callhome-tls-server
# Specifies a callhome/TLS server that this server
# should attempt to initiate a callhome connection
# at boot-time. This string has the the same format
# as the ha-server parameter.
#
# no default for callhome-tls-server
#
#### leaf cert-default-user
# The username to use if no username mapping is found
# for a NETCONF over TLS session. This parameter is
# non-standard and should only be used for debugging.
# This parameter is not available unless image is built
# with DEBUG=1 parameter.
#
# no default for cert-default-user
#
#### leaf-list cert-usermap
# Each entry specifies a certificate to user name mapping
# for NETCONF over TLS sessions. A mapping is a structured
# string using the form <user>@<fingerprint>.
# Example: admin@60:C8:5C:08:82:55
#
# no default for cert-usermap
#
#### leaf confdir
# Specifies the CLI parameter configuration directory
# to use for extra configuration files. The server
# will check this directory for files that end with
# the suffix '.conf' and process them similar to
# the main configuration file. Other files will be
# ignored.
#
# confdir /etc/yumapro/netconfd-pro.d
#
#### leaf create-empty-npcontainers
#
# An empty non-presence container has no meaning
# in NETCONF/YANG so it may be created by the server.
# In particular, the presence of the container
# node with no child nodes is semantically
# equivalent to the absence of the container node.
# This is the default style.
#
# If this parameter is set to false, then the server
# will not create empty NP containers.
#
# create-empty-npcontainers true
#
#### leaf datapath
#
#  Internal file search path for data files.
#  e.g., datapath "~/work:/some/path:../another/path"
#
# no default for datapath
#
#### leaf db-lock-retry-interval
#
# The number of milli-seconds to wait before attempting
# to get a DB-Config-Lock from the DB-API subsystem.
# The range is 10 .. 60000 milli-seconds.
#
# db-lock-retry-interval 500
#
#### leaf db-lock-timeout
#
# The total number of seconds to wait before giving
# up on a DB-Config-Lock from the DB-API subsystem.
# The value zero indicates that no retries will be
# attempted if the lock is busy.
# The maximum timeout is 3600 seconds.
#
# db-lock-timeout 30
#
#### leaf default-style
#
#  Selects the type of filtering behavior the server will
#  advertise as the 'basic' behavior in the 'with-defaults'
#  capability.
#    report-all
#    trim
#    explicit
#
# default-style explicit
#
#### leaf-list deviation
#
#  Specifies a YANG module to use as a source of deviations
# e.g. deviation project-X-deviations
#
# no default for deviation
#
#### leaf-list errmsg
#
# Specifies a replacement string for a specific error number.
# The string has the format: '<num>:<lang>:error string'
# where:
#   <num> = error number to use for error message
#   <lang> = language code (en for English)
#   error string = error string text
# no default for errmsg
#
#### leaf errmsg-lang
#
# Specifies the language code for the error-message
# language. This is only relevant if there are errmsg
# parameters for multiple languages loaded in the program.
# This value should use the ISO-639-1 code.
#
# errmsg-lang en
#
#### leaf eventlog-size
#
#  Specifies the maximum number of notification events
#  that will be saved in the notification replay buffer.
#
# eventlog-size 1000
#
#### leaf-list feature-disable
#
#     syntax:  module-name:feature-name
# Identifies a feature which should be considered disabled.
# Zero or more entries are allowed.
#
# no default for feature-disable (e.g., feature-disable foo:feature1)
#
#### leaf-list feature-enable
#
#     syntax: module-name:feature-name
# Identifies a feature which should be considered enabled.
# Zero or more entries are allowed.
#
# no default for feature-enable (e.g., feature-enable foo:feature1)
#
#### leaf feature-enable-default
#
# If true (the default), then features will be  enabled  by  default.
# If false, then features will be disabled by default.
#
# feature-enable-default true
#
#### leaf fileloc-fhs
#
# If true, then the server should use Filesystem
# Hierarchy Standard (FHS) directory locations to create
# and store server data. May need to run as root.
# If false then the server will use $HOME/.yumapro and
# other file locations to store server data.
#
# fileloc-fhs false
#
#### leaf ha-enabled
#
# Specifies whether the YP-HA protocol should be enabled,
# allowing High Availability Datastore Replication
#mode to be supported.  If this parameter is enabled
# then the ha-server-key and ha-server pool must be configured.
#
# ha-enabled false
#
#### leaf ha-initial-active
#
# Specifies the server name for the initial YP-HA active
# server. This is ignored unless ha-enabled=true.
# This string matches the server-id for the server.
#
# This parameter is used to hardwire the initial
# High Availability roles instead of setting it
# in the yp-system init1 or init2 callback functions.
# If this parameter is the same as 'server-id' then this
# server will be the initial YP-HA active server.
#
# This parameter is intended for debug mode only.
# The real operational mode should use ginalling only
# to set the HA mode.  Otherwise if the server reboots
# it will use the configured HA mode, which may not be
# correct if it has been changed during runtime.
#
# no default for ha-initial-active
#
#### leaf-list ha-server
#
# Specifies a server in the YP-HA server pool.
# This string has the format:
#
#   <server-id> '@' <server-addr> [ ':' <port-num> ]
#
#      server1@192.168.0.101
#      server1@192.168.0.101:12040
#
# The server running with this configuration must be
# listed in the ha-server pool.  The server-id parameter
# must be match the entry for this server.
#
# There must be at least 2 entries present to
# configure an HA server pool. This must be done if the
# ha-enabled parameter is set to 'true'.
#
# There is no default for ha-server
#
#### leaf ha-server-key
#
# Specifies the magic string the standby server must present
# to the active server during registration.  Used to prevent
# servers from going the wrong HA pool.  If not set then
# the active server will reject the YP-HA connection.
# This parameter must be set if the ha-enabled parameter
# is set to 'true'.
#
# There is no default for ha-server-key
#
#### leaf ha-sil-standby
#
# Specifies whether the edit callbacks such as SIL,
# SIL-SA and HOOK instrumentation will be invoked if
# the server is operating in HA standby mode";
#
# ha-sil-standby false
#
#### leaf hello-timeout
#
# Specifies the number of seconds that a session
# may exist before the hello PDU is received.
# range 0 | 10 .. 3600; 0 == no timeout used
#
# hello-timeout 600
#
#### The help parameter should not be present in the config file
#
#### The home parameter cannot be set in the config file because
#### it is already set
#
#### leaf-list hide-module
#
# Specifies the name of a module to hide from
# advertisements to client sessions. If the
# specified module name is loaded into the server,
# then this parameter will cause it to be
# omitted from the following data structures:
#  - YANG 1.0 <hello> message
#  - /netconf-state/schemas/schema list
#  - /modules-state/module list
#
# no default for hide-module
#
#### leaf idle-timeout
#
# Specifies the number of seconds that a session
# may remain idle without issuing any RPC requests.
# Sessions that have a notification subscription
# active are never dropped.
# range 0 | 10 .. 360000; 0 == no timeout used
#
# idle-timeout 3600
#
#### leaf indent
#
#  Number of spaces to indent (0..9) in formatted output.
#
# indent 2
#
#### leaf insecure-ok
# Specifies if insecure NETCONF over TLS should be allowed.
# If true then X.509 certificates will be accepted even
# if they cannot be verified. Used for debugging only!
# This parameter is only available if the image was built
# with the DEBUG=1 parameter.
#
# insecure-ok false
#
#### leaf library-mode
#
# If true, then the server will operate in YANG module
# library mode. It will find all the YANG modules
# and make them available for <get-schema> operations.
#
# The following NETCONF operations are available when
# the server is operating in library mode:
#
#   ietf-netconf:get
#   ietf-netconf:get-config
#   ietf-netconf-monitoring:get-schema
#   yuma-system:restart
#   yuma-system:shutdown
#
# library-mode false
#
#### leaf loadpath
#
# Directory load path for YANG or YIN modules.
# This will be checked before the modpath setting
# if present when finding modules. After all module
# and bundle parameters have been processed, this
# load path will be checked and the server will
# attempt to load any modules not already loaded.
# Overrides the YUMA_LOADPATH environment variable.
#
#  no default for loadpath
#
#### leaf log
#  Filespec for the log file to use instead of STDOUT.
#  Leave out to use STDOUT for log messages
#
# log logFileName
#
#### leaf log-append
#
#  If present, the log will be appended not over-written.
#  If not, the log will be over-written.
#  Only meaningful if the 'log' parameter is also present.
#
# default is to overwrite (flag not present)
#
#### leaf log-backtrace
#
# If present, log output will include traceback
# detail for each log message, subject to further
# filtering by --log-backtrace-level and/or
# log-backtrace-stream qualifiers
# uint32 [range 0 .. 100]
#
# log-backtrace 0
#
#### leaf log-backtrace-detail
#
# If present in conjunction with --log-backtrace
# log messages will include 'detailed' backtrace
# information (if supported by the compiler).
#
# log-backtrace-detail
#
#### leaf log-backtrace-level
#
# Indicates for which debug level(s) backtrace
# info will be generated. Param string is an XSD
# list: a double quoted series of whitespace
# separated (level) strings like "error warn debug"
#
#         bit write: Include backtrace info in write messages.
#         bit dev0: Include backtrace info in developer
#             level 0 messages.
#         bit error: Include backtrace info in error messages
#         bit warn: Include backtrace info in warning messages
#         bit info: Include backtrace info in info messages
#         bit dev1: Include backtrace info in developer
#             level 1 messages
#         bit debug: Include backtrace info in debug messages
#         bit debug2: Include backtrace info in debug2 messages
#         bit debug3: Include backtrace info in debug3 messages.
#         bit debug4: Iclude backtrace info in debug4 messages.
#
# log-backtrace-level "error warn info debug debug2 debug3 debug4"
#
#### leaf log-backtrace-stream
#
# Indicates in which log stream(s) backtrace info
# will be included. Param string is an XSD list:
# a double quoted series of whitespace separated
# (log stream) strings like "logfile syslog
#
#     bit logfile: Include backtrace in logfile stream
#     bit stderr: Include backtrace in stderr stream.
#     bit stdout: Include backtrace in stdout stream.
#     bit syslog: Include backtrace in syslog stream.
#     bit vendor: Include backtrace in vendor stream.
#
# log-backtrace-stream "logfile stderr stdout syslog vendor"
#
#### leaf log-console
#
#  Duplicate log messages via STDOUT or log file when log-syslog
#  is configured
#
# log-console (no default for this empty leaf)
#
#### leaf log-event-drops
#
# Indicates if a log entry would be generated when a
# notification is dropped because the specific notification
# events are disabled with an event-filter configuration
# entry.
#
# log-event-drops false
#
#### leaf log-header
#
# Indicates what header elements to include in
# header output. Param string is an XSD list:
# a double quoted series of whitespace separated
# (element) strings like "custom localtime"
#
#  bit custom: Include date, time, and level
#  bit localtime: Include localtime instead of Yang canonical format.
#
# log-header "custom localtime"
#
#### leaf log-level
#
#  Sets the debug logging level for the program. Set to "info"
#  internally by default.
#    off
#    error
#    warn
#    info
#    debug
#    debug2
#    debug3
#    debug4
#
# log-level info
#
#### leaf log-mirroring
#
#  Duplicate log messages via STDOUT or log file when log-syslog
#  is configured
#
# log-mirroring (no default for this empty leaf)
#
#### leaf log-pthread-level
#
#  Sets the debug pthread logging level for the program. Set to "info"
#  internally by default.
#    off
#    error
#    warn
#    info
#    debug
#    debug2
#    debug3
#    debug4
#
# log-pthread-level info
#
#### leaf log-stderr
#
#  Output log-level error messages via STDERR rather than STDOUT
#
# log-stderr  (default not present, no STDERR)
#
#### leaf log-suppress-ctrl
#
# If present, strip certain control characters from
# output in order to modify log formatting.
#
# (default is not present, no log suppress control)
# log-suppress-ctrl
#
#### leaf log-syslog
#  Direct log messages to syslog instead of STDOUT or log filespec
#  (default is not present, no output to syslog)
#
# (no default for log-syslog)
#
#### leaf log-syslog-level
#
#  Sets the debug syslog logging level for the program. Set to "info"
#  internally by default.
#    off
#    error
#    warn
#    info
#    debug
#    debug2
#    debug3
#    debug4
#
# log-syslog-level info
#
#### leaf log-vendor
#
# If present, log messages will be directed to a
# customer-written and registered callback function.
# This functionality is defined by an API specified in
# the YumaWorks API Reference Manual. In the absence of
# a registered callback, this parameter will direct
# logging messages to syslog in order to facilitate
# standalone testing.
#
# (no default for log-vendor)
#
#### leaf log-vendor-level
#
#  Sets the debug vendor logging level for the program. Set to "info"
#  internally by default.
#    off
#    error
#    warn
#    info
#    debug
#    debug2
#    debug3
#    debug4
#
# log-vendor-level info
#
#### leaf match-names
#
# Defines the search mode that should be used
# when resolving YANG node names in leafs and
# leaf-lists using the UrlPath data type.
#
#  enum exact
#    The name must exactly match the node name
#    for all characters in both name strings.
#  enum exact-nocase
#    The name must match the node name
#    for all characters in both name strings.
#    Strings are not case-sensitive.
#  enum one
#    The name must exactly match the first N
#    characters of just one node name, which
#    must be the only partial name match found.
#  enum one-nocase
#    The name must exactly match the first N
#    characters of just one node name, which
#    must be the only partial name match found.
#    Strings are not case-sensitive.
#  enum first
#    The name must exactly match the first N
#    characters of any node name. The first one
#    found will be used.
#  enum first-nocase
#    The name must exactly match the first N
#    characters of any node name. The first one
#    found will be used. Strings are not
#    case-sensitive.
#
# match-names exact
#
#### leaf max-burst
#
#  Specifies the maximum number of notifications
#  that should be sent to one session, within a
#  one second time interval.  The value 0 indicates
#  that the server should not limit notification
#  bursts at all
#
# max-burst 10
#
#### leaf max-getbulk
#
# Specifies the maximum number of getbulk entries to
# request from a GET2 callback. This value will be used
# in the get2cb 'max_entries' field.
# The value 0 is used to indicate there is no max and
# the GET2 callback can return as many getbulk entries
# as desired. This is the default for leaf-list GET2 callbacks
#
# max-getbulk 10
#
#### leaf max-sessions
#
# Specifies the maximum number of concurrent sessions
# that can be active at one time.  The value 0 indicates
# that no artificial session limit should be used.
# range [0 .. 1024]
#
# max-sessions 8
#
#### leaf max-cli-sessions
#
# Specifies the maximum number of concurrent CLI sessions
# that can be active at one time.  The value 0 indicates
# that no artificial session limit should be used.
# The max-sessions parameter has precedence. Range [0 .. 1024]
#
# max-cli-sessions 0
#
#### leaf message-indent
#
# The number of spaces to indent for each level of
# output in a protocol message, e.g. NETCONF request.
# The value zero means no indent, just line feeds.
# The value -1 means no indent and no line feeds either.
# range [-1 .. 9]
#
# message-indent -1
#
#### leaf modpath
#
#  Internal file search path for YANG files.
#  e.g., modpath "~/modules:/some/path:../another/path"
#  Refer to user manual for complete module search path
#
# no default for modpath
#
#### leaf-list module
#
#  Specify a module that the server should load at boot-time
#  e.g., module test2
#        module test3
#
# no default for module

#### default installed modules
#
# -- uncomment to enable module --
#
# module ietf-interfaces
# module iana-if-types
# module toaster
# module yuma-arp
# module yuma-interfaces
# module yuma-mysession
# module yuma-proc
# module yumaworks-server
#
#### default installed test modules
#
# -- uncomment to enable module --
#
# module get2-test
# module hooks-test
# module sil-error
#
#
# the following YANG modules are available in binary packages
# but not enabled by default
#
# module yuma-arp
# module yuma-interfaces
# module yuma-proc
# module sil-error
#
#### leaf-list module-tagmap
#
# Specifies a module tag mapping for use in module tags registry.
# The format is <modname>@<tag-string>.
# Examples:
#   ietf-system@ietf:system-management
#   openconfig-system@vendor:openconfig:system-management
#   example-system@vendor:example.com:system-management
#
# no default for module-tagmap
#
#### leaf-list netconf-capability
#
# Specifies a URI value that should be added to the server
# NETCONF <hello> message as a NETCONF <capability> URI and
# monitoring data in the /netconf-state/capabilities container.
# type inet:uri;
#
# no default for netconf-capability
#
#### leaf netconf-tls-address
# Specifies the IP address to listen on for NETCONF
# over TLS messages.
#
# netconf-tls-address "0.0.0.0"
#
#### leaf netconf-tls-certificate
# Contains the file path specification
# for the file containing the server SSL certificate,
# used for the NETCONF over TLS protocol.
#
# netconf-tls-certificate "$HOME/.ssl/netconfd-pro.crt"
#
#### leaf netconf-tls-key
# Contains the file path specification
# for the file containing the server SSL private key,
# used for the NETCONF over TLS protocol.
#
# netconf-tls-key "$HOME/.ssl/netconfd-pro.key"
#
#### leaf netconf-tls-port
# Specifies the TCP port to listen for NETCONF over TLS messages.
#
# netconf-tls-port 6513
#
#### leaf-netconf-tls-trust-store
# Contains the file path specification
# for the file containing the server SSL trust-store,
# or the path specification for the directory to use
# for finding trusted certificates.
#
# netconf-tls-trust-store "$HOME/.ssl/trust-store.pem"
#
#### leaf-list port
#
#  Specify the TCP ports that the server will accept
#  connections from.   Up to 4 port numbers can be configured.
#  If any ports are configured, then only those values
#  will be accepted by the server.
#
#  port 830
#
#### leaf protocols
#
#  Specifies which protocol versions the program or session
#  will attempt to use. Empty set is not allowed.
#
# protocols "netconf1.0 netconf1.1"
#
#### leaf-list restconf-capability
#
# Specifies a URI value that should be added to the server
# as monitoring data in the /restconf-state/capabilities
# container.
# type inet:uri;
#
# No default for the restconf-capability parameter
#
#### leaf restconf-default-encoding
#
# Specifies the default response encoding to use if the
# incoming request does not have an indication of
# preferred content type (e.g., no Content-Type header,
# no Accept header). Values are 'xml' and 'json'.
#
# restconf-default-encoding json
#
#### leaf restconf-server-url
#
# The starting string for the server URL to use
# in Location header lines returned by RESTCONF.
# type inet:uri;
#
# restconf-server-url "http://localhost"
#
#### leaf restconf-strict-headers
#
# If set to 'true' the server will only accept requests
# with normative Accept and Content-Type headers entries
# specified in the RFC 8040.
# The Accept header must not be empty; otherwise
# 'not accepteble' error will be returned.
#
#  Normative Accept header:
#   application/yang-data+xml,application/yang-data+json;q=0.9
#
#  Normative Content-Type header:
#   application/yang-data+xml
#   application/yang-patch+json
#
# If set to 'false', the server will try to accept
# not normative header entries.
#
#  Acceptable not normative Accept header:
#   application/xml,application/json;q=0.9
#
#  Acceptable not normative Content-Type headers:
#   application/xml
#   application/json
#   text/xml
#
#	The default is false.
#
# restconf-strict-headers false
#
#### leaf running-error
#
#  Controls the server behavior if any errors are
#  encountered while validating the running database
#  during the initial load of the running configuration
#  at boot-time.
#  enum stop
#     Terminate the program if any errors are
#     encountered in the running configuration.
#  enum continue
#     Continue the program if any errors are
#     encountered in the running configuration.
#     Altering the running configuration will fail
#     until the commit validation tests succeed.
#
# running-error stop
#
#### leaf runpath
#
#  Internal file search path for executable files.
#  e.g., runpath "~/tools:/usr/share/acmelibs"
#  Refer to user manual for complete module search path
#
# no default for runpath
#
#### leaf save-owners
#
# Indicates if owner names should be saved as meta-data
# in the configuration data. Use <with-owners> parameter
# to retrieve
#
# save-owners false
#
#### leaf server-id
#
# Server Identifier string to use for this server.
# Used in YControl and SIL-SA messages to identifier
# the server to all subsystems.  Used in YP-HA to
# identify this server in the YP-HSA server pool
# type nt:NcxName;
#
# server-id server1
#
#### leaf session-sync-mutex
#
# If present, force synchronous request processing
# (pthread version only).
#
# default is not to force synchronous request processing
#
#### leaf sil-delete-children-first
#
# If 'true', the server default behavior will be to
# treat all data deletion operations as if the
# ncx:sil-delete-children-first extension is present.
# A child node will be checked for a SIL callback
# before it is deleted.
#
# If 'false' the server default behavior will be to
# invoke SIL callbacks for deletion of child nodes
# only if the ncx:sil-delete-children-first extension is present.
#
# sil-delete-children-first false
#
#### leaf sil-invoke-for-defaults
#
# If 'true' then when a SIL or SIL-SA callback
# will be invoked for default data nodes during
# the load and load_config operations.
# If 'false' then a SIL or SIL-SA callback will
# not be invoked for default data nodes.
#
# sil-invoke-for-defaults true
#
#### leaf sil-missing-error
#
# If 'true' then when a module is loaded, but the SIL
# library code for the module is not found, an error
# will be returned instead of a warning printed.
#
# If 'false' then when a module is loaded, but the SIL
# library code for the module is not found, no error
# will be returned.  Instead, only a warning will
# be printed.
#
# sil-missing-error false
#
#### leaf sil-prio-reverse-for-deletes
#
# Specifies whether edit transactions are validated by
# the regular SIL priority of should be reversed for DELETE edits.
# This parameter can be used to delete leafref nodes with
# referenced by node in reverse order.
# If 'false' then the SIL priority will not be reversed.
#
# sil-prio-reverse-for-deletes false
#
#### leaf sil-root-check-first
#
# If 'true', the server will perform a YANG validation check
# before the SIL validate callbacks are invoked for an
# edit-config operation. This is always done for a load-config
# or commit operation.
# If 'false', the server will invoke the SIL validate callbacks
# before performing a YANG validation check. Instead the
# validation will be done before the SIL apply callback.
#
# sil-root-check-first true
#
#### sil-skip-load
#
# If present, the server will not invoke the SIL callbacks
# during initial system initialization when the startup
# configuration file is loaded into the running datastore.
#
# the default for sil-skip-load is not present
#
#### leaf sil-test-get-when
#
# If 'true', the server will evaluate 'when' statements
# for GET2 callback requests for config=false nodes.
# If 'false' then the SIL or SIL-SA callback is expected
# to test the 'when' condition internally somehow and return
# a no-instance error if the condition is 'false'.
#
# This parameter can be overriden by the ywx:sil-test-get-when
# YANG extension. If that extension is found for an
# operationdal data node then its value will be used instead
# of this parameter.
#
# sil-test-get-when false
#
#### leaf sil-validate-candidate
# If true, the server will invoke the VALIDATE phase
# for SIL and SIL-SA callbacks when each edit is made
# to the candidate datastore.
#
# If false, the server will not invoke the VALIDATE phase
# for SIL and SIL-SA callbacks when each edit is made
# to the candidate datastore.
#
# sil-validate-candidate true
#
#### leaf simple-json-names
#
# If true, the server will NOT output name of
# the module in which the data node is defined.
#
# If false, a namespace-qualified member name will be
# used for all members of a top-level JSON object and
# then also whenever the namespaces of the
# data node and its parent node are different.
#
# Default is to use name of the module
# in which the data node is defined.
#
# simple-json-names false
#
#### leaf snmp-agent-role
#
# Specifies the SNMP agent role. The default is 'master'.
#
#  Enum values:
#    master:
#       A 'master' agent that is available on the standard transport
#       address and that accepts SNMP protocol messages.
#    subagent:
#       An agent acting in a subagent role performs the
#       following functions:
#           -  Initiates AgentX sessions with the master agent
#           -  Registers MIB regions with the master agent
#           -  Instantiates managed objects
#           -  Binds OIDs within its registered MIB regions to actual
#              variables
#           -  Performs management operations on variables
#
# snmp-agent-role master
#
#### leaf snmp-subagent-priority
#
# Spefifies SNMP subagent priority.
# A value between 1 and 255, used to achieve a desired
# configuration when different sessions register identical or
# overlapping regions. The default is 127.
#
# In the master agent's dispatching algorithm, smaller values
# of priority take precedence over larger values.
#
# snmp-subagent-priority 127
#
#### leaf socket-address
#
# Specifies the IPv4 address to listen on when the
# socket-type parameter is set to 'tcp'. Ignored if the
# socket-type is 'aflocal'.
#
# Note that this parameter specifies the IP address for
# internal <ncx-connect> protocol messages.  The server
# will accept NETCONF sessions over SSH, as specified
# in the OpenSSH config file.
#
# socket-address 0.0.0.0
#
#### leaf socket-port
#
# Specifies the TCP port number to listen on when the
# socket-type parameter is set to 'tcp'. Ignored if the
# socket-type is 'aflocal'. The default is 2023.
#
# Note that this parameter specifies the port number for
# internal <ncx-connect> protocol messages.  The server
# will accept NETCONF sessions over SSH, specified with
# the 'port' parameter (e.g. 830 or 22).
#
# socket-port 2023
#
#### leaf socket-type
#
# Specifies which type of socket the server should create for
# incoming <ncx-connect> protocol sessions. The default is 'aflocal'.
#
# Note that this parameter specifies the socket type for
# internal <ncx-connect> protocol messages.  The server
# will use TCP connections for NETCONF sessions over SSH.
#
#  Enum values:
#    aflocal:
#       An AF_LOCAL socket will be used for incoming sessions.
#    tcp:
#       An AF_INET socket will be used for incoming sessions.
#
#  socket-type aflocal
#
#### choice startup or no-startup or factory-startup
#
#  Selects the startup configuration file to use
#  - To skip loading any startup file, and save to the default
#    if needed, use 'no-startup'
#  - To skip loading any startup file, and force the startup file
#    to be the factory default, use 'factory-startup'
#  - To use a specific startup file, use an absolute filespec
#  - To use a specific startup file in the YUMAPRO_DATAPATH, use a relative
#    filespec.
#
# startup startup-cfg.xml
#
#### leaf startup-error
#
#  Controls the server behavior if any errors are
#  encountered while loading the startup configuration
#  file into the running configuration at boot-time.
#  It is possible for the startup configuration
#  to contain errors within optional nodes.  If this
#  parameter is set to 'continue', then the validation
#  tests on the running config (controlled by running-error)
#  should not fail due to missing optional nodes.
#
#  enum stop
#    Terminate the program if any errors are
#    encountered in the startup configuration.
#
#  enum continue
#    Continue the program if any errors are
#    encountered in the startup configuration.
#    The entire module-specific data structure(s)
#    containing the error node(s) will not be added
#    to the running configuration at boot-time.
#
# startup-error stop
#
#### leaf startup-factory-file
#
# The full or relative filespec of the factory startup
# config file to use. If the --factory-startup parameter
# is used, or no startup file is specified or found,
# then the server will look for this filespec. If found,
# then it will copied to the startup config file used to
# load the server.
#
# startup-factory-file factory-startup-cfg.xml
#
#### leaf startup-prune-ok
# If set to 'true' then the server will prune unknown
# data nodes from the startup configuration instead
# of treating this as an error.
# If set to 'false' then unknown data nodes found in
# the startup configuration will cause an error.
#
# startup-prune-ok false
#
#### leaf subdirs [boolean]
#
#  If false, the file search paths for modules, scripts,
#  and data files will not include sub-directories if they
#  exist in the specified path.
#
# If true, then these file search paths will include
# sub-directories, if present.  Any directory name beginning
# with a dot '.' character, or named 'CVS', will be ignored.
#
# subdirs true
#
#### leaf subsys-timeout
# The number of seconds to wait for a response from a
# sub-system before declaring a timeout.  The value '0'
# indicates that no timeout should be used.
#
# subsys-timeout 30
#
#### leaf superuser
#
#  The user name to use as the superuser account.
#  To disable the superuser account completely,
#  set this parameter to the empty string.
#
# There is no default for the superuser name.
# Default is to not enable any superuser.
#
#### leaf system-notifications
#
# Indicates which YANG module(s) should be used for
# system notifications.
#
#    bit ietf: Use ietf-netconf-notifications module.
#        reference "RFC 6470
#    bit yuma: Use yuma-system module.
#
# system-notifications "ietf"
#
#### leaf system-sorted
#
# Indicates whether ordered-by system leaf-lists
# and lists will be kept in sorted order.
#
# NOTE: This parameter is deprecated and ignored.
# The server does not sort any list or leaf-list objects
# because YANG only requires that ordered-by user instances
# maintain the user-provided order.
#
# system-sorted false
#
#### leaf target
#
#  The database to use as the target of edit-config operations.
#     running
#     candidate
#
# target candidate
#
#### leaf trim-whitespace
#
# If true, then trim leading and trailing whitespace from
# XML string nodes. If false, adhere to the standard and
# do not trim any leading or trailing whitespace.
#
# trim-whitespace false
#
#### leaf usexmlorder
#
#  If set, then XML schema order will be checked as
#  required by the YANG spec.  If not set then loose
#  XML ordering will be allowed.
#
#  default is loose order; flag not set
#
#### leaf warn-error
# Controls whether all warnings are elevated to errors
#
# warn-error false
#
#### leaf warn-idlen
#  Controls whether identifier length warnings will be generated.
#  range 0 | 8 .. 1023;  0==disable ID length checking
#
# warn-idlen 64
#
#### leaf warn-linelen
#
#  Controls whether line length warnings will be generated.
#  range 0 | 40 .. 4095;  0==disable ID length checking
#
# warn-linelen 72
#
#### leaf-list warn-off
#
#  Controls whether the specified warning number will be generated
#  range 1000 .. 1999;
#  e.g., warn-off 1022
#
# no default for warn-off
#
#### leaf-list warn-up
#  Controls whether the specified warning number will be elevated
#  to an error
#  range 1000 .. 1999;
#  e.g., warn-up 1022
#
# no default for warn-up
#
#### leaf watcher-interval
#
# Specifies the sleep interval between ypwatcher program
# attempts to check availability of the server.
# Provided value is in seconds.
# The server  does not accept the value of 0 for
# this parameter. The minimal acceptable value is 1 second.
# The default value is 10.
#
# watcher-interval 10
#
#### leaf no-nvstore
# If present, the server should not load or save
# using the normal APIs during transaction management.
# The 'start' choice will be ignored (e.g., --no-startup))
# and the server will not attempt to load a startup-cfg.xml
# file.  Transactions will not be saved to NV-storage
# at all.  Any external NV-storage callbacks will be ignored.
#
# Use this mode if NV-load and NV-storage are handled
# internally and not via the startup-cfg.xml file.
#
# default for no-nvstore is not present
#
#### leaf no-watcher
#
# Control the ypwatcher program. If present, do not launch
# ypwatcher program. If this parameter is present, then
# the --watcher-interval parameter cannot be present.
#
# no default for no-watcher
#
#### leaf wildcard-keys
#
# Set to 'true' if UrlPath targets for GET operations
# are allowed to replace key values with the dash '-'
# character to indicate that all instances of that key
# are requested.
# Set to false to treat the '-' character as a plain
# character if entered as a key value in a UrlPath string.
#
# wildcard-keys false
#
#### leaf with-callhome
# This feature is only available if the server image
# is built with the flags WITH_CALLHOME=1.
# If set to 'true', then the IETF Callhome for SSH
# feature will be enabled. If set to 'false', then
# this feature will be disabled.
#
# with-callhome false
#
#### leaf with-canonical
# If set to 'true', then the server will automatically
# convert XML and JSON input parameters to the canonical
# format for the YANG data type, if possible.
#
# with-canonical true
#
#### leaf with-config-id
#
# If set to 'true', then the YumaWorks :config-id
# capability will be enabled.  This is used to help
# cache device configurations.  It is an enterprise
# capability URI, not a standard YANG module URI.
# If set to 'false', then the YumaWorks :config-id
# capability will be disabled.
#
# with-config-id true
#
#### leaf with-db-lock
#
# If set to 'true', then the server will use the
# BB-API DB-Config-Lock service for all configuration
# edit transactions to the <running> datastore.
# All client edits will be require this lock be
# granted or it will fail.
# If set to 'false', the DB-Config-Lock will not be
# used by the server.
#
# with-db-lock false
#
#### leaf with-gnmi
# This feature is only available if the server image
# is built with the flags WITH_GNMI=1.
# If set to 'true', then the gNMI protocol will be enabled.
# Otherwise, the gNMI protocol will not be enabled.
# The incoming connection will be dropped if the protocol
# is disabled.
#
# with-gnmi false
#
#### leaf maintenance-mode
# If set to 'true', then allow the maintenance mode
# to be used. Otherwise, ignore all requests to place
# the server in maintenance mode. The default is true.
#
# maintenance-mode true
#
#### leaf with-modtags
# If set to 'true', then the module tags feature will be
# enabled. Otherwise, this feature will be disabled.
# If disabled, the module-tagmap parameter will be ignored
# and the ietf-module-tags module will not be loaded.
#
# with-modtags true
#
#### leaf with-netconf
#
# If set to 'true', then the NETCONF protocol will be
# enabled. Otherwise, the NETCONF protocol
# will not be enabled. The incoming connection will be
# dropped if the protocol is disabled.
#
# with-netconf true
#
#### leaf with-netconf-tls
# If set to 'true', then the NETCONF over TLS protocol
# will be enabled. Otherwise, the NETCONF over TLS
# protocol will not be enabled.
#
# with-netconf-tls false
#
#### leaf with-notifications
#
# If set to 'true', then the :notification:1.0 and
# :interleave:1.0 capabilities will be enabled.
# Otherwise, these capabilities will not be enabled.
#
# with-notifications true
#
#### leaf with-ocpattern
#
# If true, then OpenConfig patterns with be checked.
# If the module name starts with the string 'openconfig-'
# then all pattern statements within that module
# are treated as POSIX patterns, not YANG patterns.
# If false, then the pattern statements in all modules
# will be checked as YANG patterns.
#
# with-ocpattern false
#
#### leaf with-restconf
#
# If set to 'true', then the RESTCONF protocol will be
# enabled. Otherwise, the RESTCONF protocol
# will not be enabled. The incoming connection will be
# dropped if the protocol is disabled.
#
# with-restconf true
#

#### leaf with-rollback-on-error
#
# If set to 'true', then the NETCONF :rollback-on-error
# capability and feature will be enabled and advertised.
# Otherwise, this feature will not be enabled or
# advertised.
#
# with-rollback-on-error true
#
#### leaf with-snmp
#
# If set to 'true', then the SNMP protocol will be
# enabled. Otherwise, the SNMP protocol
# will not be enabled. The incoming SNMP requests will be
# dropped if the protocol is disabled.
#
# with-snmp false
#
#### leaf with-startup
#
#  If 'true', then the :startup capability will be enabled.
#  If 'false', then the :startup capability will not be enabled.
#
# with-startup false
#
#### leaf with-support-save
#
# If set to 'true', then the yumaworks-support-save module
# will be loaded and enabled. Otherwise, this module will
# not be loaded. Ignored if the server image is not built
# with the WITH_SUPPORT_SAVE=1 compile flag.
#
# with-support-save true
#
#### leaf with-url
#
#  If  set to 'false', then the :url capability will be disabled.
#  Otherwise, the :url capability will be enabled. This capability
#  allows  local  files  to  be  stored as backups on the server.
#
# with-url true
#
#### leaf with-url-ftp
#
# If set to 'true', then the 'ftp' protocol scheme will
# be enabled for the 'url' capability. Ignored if
# the 'with-url' parameter is false.
#
# with-url-ftp false
#
#### leaf with-url-tftp
#
# If set to 'true', then the 'tftp' protocol scheme will
# be enabled for the 'url' capability. Ignored if
# the 'with-url' parameter is false.
#
# with-url-tftp false
#
#### leaf with-validate
#
#  If 'true', then the :validate capability will be enabled.
#  If 'false', then no validate operation or test-option
#  These operations can use lots of memory, so disable
#  to reduce runtime meory spikes
#
# with-validate true
#
#### leaf with-warnings
# If set to 'true', then setting the error-severity field
# to warning (instead of error) will be enabled. Otherwise,
# the error-severity field will be set to error, even if the
# server code tries to set it to warning.  This is not compliant
# with the NETCONF protocol and tools may reject rpc-error
# data sent with an error-severity value of warning.
# The default value is false.
#
# with-warnings false
#
#### leaf with-yang-api
#
# If set to 'true', then the YNAG-API protocol will be
# enabled. Otherwise, the YANG-API protocol
# will not be enabled. The incoming connection will be
# dropped if the protocol is disabled.
#
# with-yang-api true
#
#### leaf with-yang11-hello
#
# Control whether the NETCONF hello message should
# conform to the standard and leave out YANG 1.1 modules.
# If set to 'true', then leave out YANG 1.1 modules
# from <capability> used in <hello>. Also keep out of
# monitoring <capabilities> list.
# If 'false' then ignore the standard and advertise
# YANG 1.1 module capabilities
#
# with-yang11-hello false
#
#### leaf with-yp-coap
#
# If set to 'true', then the YP-CoAP protocol will be
# enabled. Otherwise, the YP-CoAP protocol
# will not be enabled.  This protocol is NOT SECURE.
# It SHOULD NOT be used unless privacy is provided
# by some other means.
#
# with-yp-coap false
#
#### leaf with-yp-coap-dtls
#
# If set to 'true', then the YP-CoAP over DTLS protocol will be
# enabled. Otherwise, the YP-CoAP over DTLS protocol
# will not be enabled.  This protocol is secure.
# It SHOULD be used instead of YP-CoAP without DTLS
#
# with-yp-coap-dtls false
#
#### leaf with-yp-shell
#
# If set to 'true', then the YP-SHELL protocol will be
# enabled. Otherwise, the YP-SHELL protocol
# will not be enabled. The incoming connection will be
# dropped if the protocol is disabled.
#
# with-yp-shell true
#
#### leaf with-yuma-system
#
# If set to 'true', then the yuma-system module will be
# loaded and enabled. Otherwise, this module will not be
# loaded.
#
# with-yuma-system true
#
#### leaf with-yuma-time-filter
#
# If set to 'true', then the yuma-time-filter module will be
# loaded and enabled. Otherwise, this module will not be loaded.
#
# with-yuma-time-filter true
#
#### leaf with-yumaworks-event-filter
#
# If set to 'true', then the yumaworks-event-filter module
# will be loaded and enabled. Otherwise, this module will
# not be loaded.
#
# with-yumaworks-event-filter true
#
#### leaf with-yumaworks-getbulk
#
# If set to 'true', then the yumaworks-getbulk module will
# be loaded and enabled. Otherwise, this module will not be
# loaded. If disabled the <get-bulk> operation will not
# be available.
#
# with-yumaworks-getbulk true
#
#### leaf with-yumaworks-ids
#
# If set to 'true', then the yumaworks-ids module will
# be loaded and enabled. Otherwise, this module will not be
# loaded. If not enabled then the extra transport types
# for netconfd-pro specific transports and control sessions
# will not be available.
#
# with-yumaworks-ids true
#
#### leaf with-yumaworks-system
#
# If set to 'true', then the yumaworks-system module will be
# loaded and enabled. Otherwise, this module will not be
# loaded. The <load>, <unload>, <load-bundle>, and
# <unload-bundle> operations will not be available.
# Other operations and data model augments will not be available.
#
# with-yumaworks-system true
#
#### leaf with-yumaworks-templates
#
# If set to 'true', then the yumaworks-templates module will
# be loaded and enabled. Otherwise, this module will not be
# loaded. Ignored unless the server is built with the
# WITH_TEMPLATES=1 compiler flag.
#
# with-yumaworks-templates true
#
#### leaf yangapi-server-url
#
# The starting string for the server URL to use
# in Location header lines returned by YANG-API.
# type inet:uri;
#
# yangapi-server-url "http://localhost"
#
#### leaf yp-coap-address
#
# The IP address that the YP-CoAP protocol will use to listen
# for incoming requests. This will also be used as the source
# address in YP-CoAP packets sent by the server.
#   type inet:ip-address
#
# yp-coap-address "0.0.0.0"
#
#### leaf yp-coap-port
#
# The UDP port number that the YP-CoAP protocol will use to listen
# for incoming requests. This will also be used as the source
# port number in YP-CoAP packets sent by the server.
#  type inet:port-number;
#
# yp-coap-port 5683
#
#### leaf yp-coap-dtls-port
#
#      // not implemented yet!!!
#
# The UDP port number that the YP-CoAP protocol will use to listen
# for incoming requests for CoAP over DTLS. This will also be used
# as the source port number in YP-CoAP packets sent by the server.
#   type inet:port-number;
#
# yp-coap-dtls-port 5684
#


}
