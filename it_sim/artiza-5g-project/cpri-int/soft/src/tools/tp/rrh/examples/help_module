puts "",
"Scripts module Rrh.<module>() Usage:",
"",
" Input(I)/Output(O) type * i:int,s:string,o:object *",
"",
" (O)Rrh.xxx(I)             : module name",
"---------------------------------------------------------------------",
" (i)Rrh.api(s,i,...)       : RRH api module",
" (i)Rrh.dmsg(i)            : debug message mode change module",
" ( )Rrh.dcatch(s)          : signal catch module",
" ( )Rrh.sigqueue(s,i,i)    : signal queue module",
" (i)Rrh.memcmp(i,i,i)      : memcmp module",
" (i)Rrh.msgset(i,o)        : obj to buffer set module",
" (i)Rrh.msgset_b(i,o,i)    : obj to buffer set byte fix mode module",
" (i)Rrh.msgget(o,i)        : buffer to obj set module",
" (i)Rrh.msgget_b(o,i,i)    : buffer to obj set byte fix mode module",
" (i)Rrh.msgsend(i,o,i,i,i) : msg send module",
" (i)Rrh.msgrecv(i,i,o,i,i) : msg recv module",
" (i)Rrh.require(s)         : script require module",
" (s)Rrh.getline()          : stdin getline module",
" ( )Rrh.sleep(i,i)         : sleep module",
" (i)Rrh.system(s)          : system module",
" (i)Rrh.malloc(i)          : malloc module",
" ( )Rrh.free(i)            : free module",
" ( )Rrh.timer(i)           : timer module , if input 0,timer stop.",
" (i)Rrh.tsocket()          : tcp socket module",
" (i)Rrh.tbind(i,s,i)       : tcp bind module",
" (i)Rrh.tlisten(i,i)       : tcp listen module",
" (i)Rrh.taccept(i,o)       : tcp accept module",
" (i)Rrh.tconnect(i,s,i)    : tcp connect module",
" (i)Rrh.tsend(i,o)         : tcp send module",
" (i)Rrh.trecv(i,o)         : tcp recv module",
" ( )Rrh.tclose(i)          : tcp close module",
" (i)Rrh.usocket()          : udp socket module",
" (i)Rrh.ubind(i,s,i)       : udp bind module",
" (i)Rrh.usend(i,o,o)       : udp send module",
" (i)Rrh.urecv(i,o,o)       : udp recv module",
" ( )Rrh.uclose(i)          : udp close module",
" (i)Rrh.recv(i,i,i)        : recv module",
" (i)Rrh.recvfrom(i,i,i,o)  : recvfrom module",
" (i)Rrh.sendto(i,i,i)      : send module",
" (i)Rrh.sendto(i,i,i,o)    : sendto module",
" (i)Rrh.select(i,i,i)      : select module",
" (i)Rrh.nselect(o,i,i)     : multi select module",
" (i)Rrh.tftpget(i,o)       : tftp data get module",
" (i)Rrh.tftpset(i,o)       : tftp data set module",
" (i)Rrh.httpget(i,o)       : http data get module",
" (i)Rrh.httpset(i,o)       : http data set module",
" (i)Rrh.ioctl(i,s)         : socket ioctl module",
" (i)Rrh.fopen(s)           : file open module",
" ( )Rrh.fclose(i)          : file close module",
" ( )Rrh.fwrite(s,i,i)      : file write module",
" (s)Rrh.fread(i,s)         : file read module",
" ( )Rrh.fseek(i,i)         : file seek module",
" (i)Rrh.ftell(i)           : tell point of FD module",
" (s)Rrh.fgetline(i)        : file get line module",
" ( )Rrh.fseekline(i,i)     : file seek line module",
" (i)Rrh.fsizeget(s)        : file size get module",
" (s)Rrh.regread(s)         : register read module",
" ( )Rrh.regwrite(s,s)      : register write module",
" (s)Rrh.eepread(i)         : eeprom read module",
" ( )Rrh.eepwrite(i,i)      : eeprom write module",
" (s)Rrh.eepplread(i)       : hard eeprom read module",
" ( )Rrh.eepplwrite(i,i)    : hard eeprom write module",
" ( )Rrh.shmplwrite(i, i)   : hard eeprom share write module",
" ( )Rrh.shmtrainwrite(i, i)   : eeprom training share write module",
" (s)Rrh.v_to_v(s,s,s)      : value type change module",
" (s)Rrh.spiread(s,s)       : spi read module",
" ( )Rrh.spiwrite(s,s,s)    : spi write module",
" (i)Rrh.eepdrv(s,i,i)      : eeprom driver module",
" (s)Rrh.calc(s,s,s)        : string calculation",
" (i)Rrh.addcrc(i,i)     : big order crc calculation",
" (i)Rrh.littlecrc(i,i)   : little order crc calculation",
""
