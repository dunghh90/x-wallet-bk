rrhコマンドについて

(1)実装イメージ

 今回ZynqREのrrhコマンドは以下のような実装になってます

 ┌─────┬───────────────┐---------
 │Command   │ scripts file(ver,help,fc...) │コマンドアプリ,すべてtxtファイル
 │─────┼───────────────┤
 │VM        │ Reit VM (libmruby.a)         │libmruby.a,バイナリファイル、rrhと結合される、Cソース
 ├─────┼───────────────┤
 │Program   │ rrh(rrh.c , rrhlib,c .. )    │rrh,バイナリファイル、Cソース
 │─────┼─────────┬─────┤---------
 │MW        │ BPF/API/com..    │  標準lib │
 │─────┼─────────┴─────┤RRHソフトウエア
 │OS/Driver │ OS(Linux)  /rootfile system  │(Cソース)
 │          ├───────────────┤
 │          │ device driver                │
 ├─────────────────────┤---------
 │Hard ware (PLD,FPGA,EEPROM,FLASH..)       │ハード
 └─────────────────────┘

 - Command   : コマンド部、ファイルはすべてtxt形式. rrh -xxxのxxxはすべてtxtファイルである(※コンパイル不要な部分)
 - VM(mruby) : コマンド解析部、コマンド構造解析、実行する部分。bin形式. 必要に応じてProgramが呼び出す(※コンパイル必要な部分)
 - Program   : コマンド実行部、モジュール実行部分、bin形式. コマンド部でコールされるモジュールはすべてここで実装(※コンパイル必要な部分)
 - MW        : RRHに搭載されている共有ライブラリ群、BPFやAPIやいろいろある(コンパイル必要な部分)
 - OS/Driver : RRHに搭載されているOS，ドライバ群(コンパイル必要な部分)
 - Hard ware : RRHに搭載されているハードウエア(コンパイル必要な部分)

(2)コマンドファイル(スクリプトファイル)の組み込み方法

　コマンド(スクリプトファイル)は以下の方法で実機に組み込むことが可能です。
　①動的に組み込む方法
　・RRHの起動後に組み込む方法(part1)
　　　1)ftp等で/tmpにファイルを置く
　　　2)コピーコマンドで/opt/tp/配下にファイルをコピー
        cp -rf /tmp/* /opt/tp/
　　※リセットしたら消える

　・RRHの起動後に組み込む方法(part2)
　　　1)viコマンドをつかって直接編集する
　　　　vi /opt/tp/スクリプトファイル名

　②静的組み込む方法
　・RRHのソフトLM作成時に組み込む方法
　　※リセットしても消えない
 
(3)コマンドファイルでできること
　・レジスタアクセス、数値演算、プロセス間通信、その他諸々、なんでもできる。


