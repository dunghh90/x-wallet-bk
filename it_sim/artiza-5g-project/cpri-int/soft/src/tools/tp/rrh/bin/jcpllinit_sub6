# 
# PTP setup
# 
Rrh.require("./verbose")
Rrh.assign()

couter=1;
puts "JCPLL device reset enable"
Rrh.regbitoff("a0000040","00000002")
Rrh.sleep(1,100000000)
puts "JCPLL device set ..."

Rrh.pllwrite(0x0000,0x90)
Rrh.pllwrite(0x0000,0x10)
Rrh.pllwrite(0x0002,0x00)
Rrh.pllwrite(0x0100,0x28)
Rrh.pllwrite(0x0101,0xAA)
Rrh.pllwrite(0x0103,0x01)
Rrh.pllwrite(0x0104,0x02)
Rrh.pllwrite(0x0105,0x00)
Rrh.pllwrite(0x0106,0x70)
Rrh.pllwrite(0x0107,0x11)
Rrh.pllwrite(0x0108,0x30)
Rrh.pllwrite(0x0109,0xAA)
Rrh.pllwrite(0x010B,0x01)
Rrh.pllwrite(0x010C,0x22)
Rrh.pllwrite(0x010D,0x00)
Rrh.pllwrite(0x010E,0x79)
Rrh.pllwrite(0x010F,0x00)
Rrh.pllwrite(0x0110,0x28)
Rrh.pllwrite(0x0111,0xAA)
Rrh.pllwrite(0x0113,0x01)
Rrh.pllwrite(0x0114,0x22)
Rrh.pllwrite(0x0115,0x00)
Rrh.pllwrite(0x0116,0x71)
Rrh.pllwrite(0x0117,0x01)
Rrh.pllwrite(0x0118,0x30)
Rrh.pllwrite(0x0119,0xAA)
Rrh.pllwrite(0x011B,0x01)
Rrh.pllwrite(0x011C,0x22)
Rrh.pllwrite(0x011D,0x00)
Rrh.pllwrite(0x011E,0x71)
Rrh.pllwrite(0x011F,0x01)
Rrh.pllwrite(0x0120,0x24)
Rrh.pllwrite(0x0121,0xAA)
Rrh.pllwrite(0x0123,0x01)
Rrh.pllwrite(0x0124,0x27)
Rrh.pllwrite(0x0125,0x00)
Rrh.pllwrite(0x0126,0x70)
Rrh.pllwrite(0x0127,0x12)
Rrh.pllwrite(0x0128,0x24)
Rrh.pllwrite(0x0129,0xAA)
Rrh.pllwrite(0x012B,0x01)
Rrh.pllwrite(0x012C,0x27)
Rrh.pllwrite(0x012D,0x00)
Rrh.pllwrite(0x012E,0x70)
Rrh.pllwrite(0x012F,0x12)
Rrh.pllwrite(0x0130,0x30)
Rrh.pllwrite(0x0131,0xAA)
Rrh.pllwrite(0x0133,0x01)
Rrh.pllwrite(0x0134,0x20)
Rrh.pllwrite(0x0135,0x00)
Rrh.pllwrite(0x0136,0x70)
Rrh.pllwrite(0x0137,0x11)
Rrh.pllwrite(0x0138,0x00)
Rrh.pllwrite(0x0139,0x00)
Rrh.pllwrite(0x013A,0x00)
Rrh.pllwrite(0x013B,0x80)
Rrh.pllwrite(0x013C,0x00)
Rrh.pllwrite(0x013D,0x08)
Rrh.pllwrite(0x013E,0x01)
Rrh.pllwrite(0x013F,0x11)
Rrh.pllwrite(0x0140,0x00)
Rrh.pllwrite(0x0141,0xFF)
Rrh.pllwrite(0x0142,0x00)
Rrh.pllwrite(0x0143,0x91)
Rrh.pllwrite(0x0144,0x00)
Rrh.pllwrite(0x0145,0x7F)
Rrh.pllwrite(0x0146,0x02)
Rrh.pllwrite(0x0147,0x0A)
Rrh.pllwrite(0x0148,0x02)
Rrh.pllwrite(0x0149,0x42)
Rrh.pllwrite(0x014A,0x00)
Rrh.pllwrite(0x014B,0x06)
Rrh.pllwrite(0x014C,0x36)
Rrh.pllwrite(0x014D,0x00)
Rrh.pllwrite(0x014E,0xC0)
Rrh.pllwrite(0x014F,0x7F)
Rrh.pllwrite(0x0150,0x13)
Rrh.pllwrite(0x0151,0x02)
Rrh.pllwrite(0x0152,0x00)
Rrh.pllwrite(0x0153,0x00)
Rrh.pllwrite(0x0154,0x10)
Rrh.pllwrite(0x0155,0x00)
Rrh.pllwrite(0x0156,0x08)
Rrh.pllwrite(0x0157,0x00)
Rrh.pllwrite(0x0158,0x96)
Rrh.pllwrite(0x0159,0x00)
Rrh.pllwrite(0x015A,0x04)
Rrh.pllwrite(0x015B,0xD4)
Rrh.pllwrite(0x015C,0x20)
Rrh.pllwrite(0x015D,0x00)
Rrh.pllwrite(0x015E,0x00)
Rrh.pllwrite(0x015F,0x1E)
Rrh.pllwrite(0x0160,0x00)
Rrh.pllwrite(0x0161,0x01)
Rrh.pllwrite(0x0162,0x40)
Rrh.pllwrite(0x0163,0x00)
Rrh.pllwrite(0x0164,0x00)
Rrh.pllwrite(0x0165,0x20)
Rrh.pllwrite(0x0171,0xAA)
Rrh.pllwrite(0x0172,0x02)
Rrh.pllwrite(0x017C,0x18)
Rrh.pllwrite(0x017D,0x77)
Rrh.pllwrite(0x0166,0x00)
Rrh.pllwrite(0x0167,0x00)
Rrh.pllwrite(0x0168,0x04)
Rrh.pllwrite(0x0169,0x59)
Rrh.pllwrite(0x016A,0x20)
Rrh.pllwrite(0x016B,0x00)
Rrh.pllwrite(0x016C,0x00)
Rrh.pllwrite(0x016D,0x00)
Rrh.pllwrite(0x016E,0x3B)
Rrh.pllwrite(0x0173,0x00)
Rrh.pllwrite(0x1FFD,0x00)
Rrh.pllwrite(0x1FFE,0x00)
Rrh.pllwrite(0x1FFF,0x53)

val = Rrh.pllread(0x0143)
data_s = Rrh.calc(val,"|","0020")
Rrh.pllwrite(0x0143,data_s.to_i(16))

data_s = Rrh.calc(val,"&","FFDF")
Rrh.pllwrite(0x0143,data_s.to_i(16))

Rrh.pllwrite(0x144,0xFF)

val = Rrh.pllread(0x0143)
data_s = Rrh.calc(val,"&","FF7F")
Rrh.pllwrite(0x0143,data_s.to_i(16))

val = Rrh.pllread(0x0143)
data_s = Rrh.calc(val,"&","FFFC")
data_s2 = Rrh.calc(data_s,"|","0002")
Rrh.pllwrite(0x0143,data_s2.to_i(16))

val = Rrh.pllread(0x0139)
data_s = Rrh.calc(val,"&","FFFC")
data_s2 = Rrh.calc(data_s,"|","0002")
Rrh.pllwrite(0x0139,data_s2.to_i(16))

Rrh.sleep(1,0)

puts "Completed"
Rrh.unassign()
exit(0)
