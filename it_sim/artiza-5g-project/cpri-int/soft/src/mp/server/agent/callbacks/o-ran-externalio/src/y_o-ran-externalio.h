
#ifndef _H_y_o_ran_externalio
#define _H_y_o_ran_externalio
/*
 * Copyright (c) 2008 - 2012, Andy Bierman, All Rights Reserved.
 * Copyright (c) 2012 - 2019, YumaWorks, Inc., All Rights Reserved.
 *
 * Unless required by applicable law or agreed to in writing,
 * software distributed under the License is distributed on an
 * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
 * KIND, either express or implied.  See the License for the
 * specific language governing permissions and limitations
 * under the License.
 *

*** Generated by yangdump-sdk 18.10-15

    YumaPro SIL-SA header
    module o-ran-externalio
    revision 2019-02-04
    namespace urn:o-ran:external-io:1.0
    organization O-RAN Alliance
    Created: 2019-12-20T02:20:28Z
    CLI parameters:
        format yh
        indent 4
        module o-ran-externalio
        output y_o-ran-externalio.h
        sil-get2
        sil-sa
        unified true

 */

#include <xmlstring.h>

#include "dlq.h"
#include "ncxtypes.h"
#include "op.h"
#include "status.h"
#include "val.h"

#ifdef __cplusplus
extern "C" {
#endif

#define y_o_ran_externalio_M_o_ran_externalio (const xmlChar *)"o-ran-externalio"

#define y_o_ran_externalio_R_o_ran_externalio (const xmlChar *)"2019-02-04"

#define y_o_ran_externalio_N_current_input_notification (const xmlChar *)"current-input-notification"
#define y_o_ran_externalio_N_external_input (const xmlChar *)"external-input"
#define y_o_ran_externalio_N_external_input_change (const xmlChar *)"external-input-change"
#define y_o_ran_externalio_N_external_io (const xmlChar *)"external-io"
#define y_o_ran_externalio_N_input (const xmlChar *)"input"
#define y_o_ran_externalio_N_io_port (const xmlChar *)"io-port"
#define y_o_ran_externalio_N_line_in (const xmlChar *)"line-in"
#define y_o_ran_externalio_N_line_out (const xmlChar *)"line-out"
#define y_o_ran_externalio_N_name (const xmlChar *)"name"
#define y_o_ran_externalio_N_output (const xmlChar *)"output"
#define y_o_ran_externalio_N_output_setting (const xmlChar *)"output-setting"
#define y_o_ran_externalio_N_port_in (const xmlChar *)"port-in"
#define y_o_ran_externalio_N_port_out (const xmlChar *)"port-out"


/********************************************************************
* FUNCTION y_o_ran_externalio_init
*
* initialize the o-ran-externalio server instrumentation library
*
* INPUTS:
*    modname == requested module name
*    revision == requested version (NULL for any)
*
* RETURNS:
*     error status
********************************************************************/
extern status_t y_o_ran_externalio_init (
    const xmlChar *modname,
    const xmlChar *revision);

/********************************************************************
* FUNCTION y_o_ran_externalio_init2
*
* SIL init phase 2: non-config data structures
* Called after running config is loaded
*
* RETURNS:
*     error status
********************************************************************/
extern status_t y_o_ran_externalio_init2 (void);

/********************************************************************
* FUNCTION y_o_ran_externalio_cleanup
*    cleanup the server instrumentation library
*
********************************************************************/
extern void y_o_ran_externalio_cleanup (void);

#ifdef __cplusplus
} /* end extern 'C' */
#endif

#endif
