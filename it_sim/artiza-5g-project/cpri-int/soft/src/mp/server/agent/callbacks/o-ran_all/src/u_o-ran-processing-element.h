
#ifndef _H_u_o_ran_processing_element
#define _H_u_o_ran_processing_element
/*
 * Copyright (c) 2008 - 2012, Andy Bierman, All Rights Reserved.
 * Copyright (c) 2012 - 2019, YumaWorks, Inc., All Rights Reserved.
 *
 * Unless required by applicable law or agreed to in writing,
 * software distributed under the License is distributed on an
 * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
 * KIND, either express or implied.  See the License for the
 * specific language governing permissions and limitations
 * under the License.
 *

*** Generated by yangdump-sdk 18.10-15

    User SIL-SA header
    bundle o-ran_all
    module o-ran-processing-element
    revision 2019-02-04
    namespace urn:o-ran:processing-element:1.0
    organization O-RAN Alliance
    Created: 2019-12-20T02:20:29Z
    CLI parameters:
        defnames true
        format uh
        indent 4
        module ietf-yang-types
        module ietf-inet-types
        module ietf-interfaces
        module iana-if-type
        module ietf-ip
        module iana-hardware
        module ietf-hardware
        module ietf-netconf-acm
        module o-ran-hardware
        module o-ran-software-management
        module o-ran-interfaces
        module o-ran-transceiver
        module o-ran-mplane-int
        module o-ran-dhcp
        module o-ran-compression-factors
        module o-ran-uplane-conf
        module o-ran-module-cap
        module o-ran-processing-element
        module o-ran-performance-management
        module o-ran-fm
        module o-ran-lbm
        module o-ran-supervision
        module o-ran-beamforming
        module o-ran-operations
        module o-ran-usermgmt
        module o-ran-sync
        sil-bundle o-ran_all
        sil-get2
        sil-sa
        unified true

 */

#include <xmlstring.h>

#include "agt.h"
#include "agt_cb.h"
#include "dlq.h"
#include "ncxtypes.h"
#include "op.h"
#include "rpc.h"
#include "ses.h"
#include "status.h"
#include "val.h"
#include "y_o-ran-processing-element.h"
#include "u_ietf-yang-types.h"
#include "u_ietf-inet-types.h"
#include "u_ietf-interfaces.h"
#include "u_iana-if-type.h"
#include "u_ietf-ip.h"
#include "u_iana-hardware.h"
#include "u_ietf-hardware.h"
#include "u_ietf-netconf-acm.h"
#include "u_o-ran-hardware.h"
#include "u_o-ran-software-management.h"
#include "u_o-ran-interfaces.h"
#include "u_o-ran-transceiver.h"
#include "u_o-ran-mplane-int.h"
#include "u_o-ran-dhcp.h"
#include "u_o-ran-compression-factors.h"
#include "u_o-ran-uplane-conf.h"
#include "u_o-ran-module-cap.h"
#include "u_o-ran-performance-management.h"
#include "u_o-ran-fm.h"
#include "u_o-ran-lbm.h"
#include "u_o-ran-supervision.h"
#include "u_o-ran-beamforming.h"
#include "u_o-ran-operations.h"
#include "u_o-ran-usermgmt.h"
#include "u_o-ran-sync.h"

#ifdef __cplusplus
extern "C" {
#endif

/* case /processing-elements/enhanced-uplane-mapping/uplane-mapping/up-markings/ethernet */
typedef struct y_o_ran_processing_element_T_processing_elements_enhanced_uplane_mapping_uplane_mapping_up_markings_ethernet_ {
    xmlChar *v_up_cos_name;
} y_o_ran_processing_element_T_processing_elements_enhanced_uplane_mapping_uplane_mapping_up_markings_ethernet;

/* case /processing-elements/enhanced-uplane-mapping/uplane-mapping/up-markings/ipv4 */
typedef struct y_o_ran_processing_element_T_processing_elements_enhanced_uplane_mapping_uplane_mapping_up_markings_ipv4_ {
    xmlChar *v_upv4_dscp_name;
} y_o_ran_processing_element_T_processing_elements_enhanced_uplane_mapping_uplane_mapping_up_markings_ipv4;

/* case /processing-elements/enhanced-uplane-mapping/uplane-mapping/up-markings/ipv6 */
typedef struct y_o_ran_processing_element_T_processing_elements_enhanced_uplane_mapping_uplane_mapping_up_markings_ipv6_ {
    xmlChar *v_upv6_dscp_name;
} y_o_ran_processing_element_T_processing_elements_enhanced_uplane_mapping_uplane_mapping_up_markings_ipv6;

/* choice /processing-elements/enhanced-uplane-mapping/uplane-mapping/up-markings */
typedef union y_o_ran_processing_element_T_processing_elements_enhanced_uplane_mapping_uplane_mapping_up_markings_ {
    y_o_ran_processing_element_T_processing_elements_enhanced_uplane_mapping_uplane_mapping_up_markings_ethernet v_ethernet;
    y_o_ran_processing_element_T_processing_elements_enhanced_uplane_mapping_uplane_mapping_up_markings_ipv4 v_ipv4;
    y_o_ran_processing_element_T_processing_elements_enhanced_uplane_mapping_uplane_mapping_up_markings_ipv6 v_ipv6;
} y_o_ran_processing_element_T_processing_elements_enhanced_uplane_mapping_uplane_mapping_up_markings;

/* list /processing-elements/enhanced-uplane-mapping/uplane-mapping */
typedef struct y_o_ran_processing_element_T_processing_elements_enhanced_uplane_mapping_uplane_mapping_ {
    dlq_hdr_t qhdr;
    xmlChar *v_up_marking_name;
    y_o_ran_processing_element_T_processing_elements_enhanced_uplane_mapping_uplane_mapping_up_markings v_up_markings;
} y_o_ran_processing_element_T_processing_elements_enhanced_uplane_mapping_uplane_mapping;

/* container /processing-elements/enhanced-uplane-mapping */
typedef struct y_o_ran_processing_element_T_processing_elements_enhanced_uplane_mapping_ {
    dlq_hdr_t v_uplane_mapping;
} y_o_ran_processing_element_T_processing_elements_enhanced_uplane_mapping;


#ifdef u_o_ran_interfaces_F_ALIASMAC_BASED_CU_PLANE
/* container /processing-elements/ru-elements/transport-flow/aliasmac-flow */
typedef struct y_o_ran_processing_element_T_processing_elements_ru_elements_transport_flow_aliasmac_flow_ {
    xmlChar *v_ru_aliasmac_address;
    xmlChar *v_vlan_id;
    xmlChar *v_o_du_mac_address;
} y_o_ran_processing_element_T_processing_elements_ru_elements_transport_flow_aliasmac_flow;
#endif /* u_o_ran_interfaces_F_ALIASMAC_BASED_CU_PLANE */

/* container /processing-elements/ru-elements/transport-flow/eth-flow */
typedef struct y_o_ran_processing_element_T_processing_elements_ru_elements_transport_flow_eth_flow_ {
    xmlChar *v_ru_mac_address;
    xmlChar *v_vlan_id;
    xmlChar *v_o_du_mac_address;
} y_o_ran_processing_element_T_processing_elements_ru_elements_transport_flow_eth_flow;

/* case /processing-elements/ru-elements/transport-flow/udpip-flow/address/ru-ipv4-address */
typedef struct y_o_ran_processing_element_T_processing_elements_ru_elements_transport_flow_udpip_flow_address_ru_ipv4_address_ {
    xmlChar *v_ru_ipv4_address;
} y_o_ran_processing_element_T_processing_elements_ru_elements_transport_flow_udpip_flow_address_ru_ipv4_address;

/* case /processing-elements/ru-elements/transport-flow/udpip-flow/address/ru-ipv6-address */
typedef struct y_o_ran_processing_element_T_processing_elements_ru_elements_transport_flow_udpip_flow_address_ru_ipv6_address_ {
    xmlChar *v_ru_ipv6_address;
} y_o_ran_processing_element_T_processing_elements_ru_elements_transport_flow_udpip_flow_address_ru_ipv6_address;

/* choice /processing-elements/ru-elements/transport-flow/udpip-flow/address */
typedef union y_o_ran_processing_element_T_processing_elements_ru_elements_transport_flow_udpip_flow_address_ {
    y_o_ran_processing_element_T_processing_elements_ru_elements_transport_flow_udpip_flow_address_ru_ipv4_address v_ru_ipv4_address;
    y_o_ran_processing_element_T_processing_elements_ru_elements_transport_flow_udpip_flow_address_ru_ipv6_address v_ru_ipv6_address;
} y_o_ran_processing_element_T_processing_elements_ru_elements_transport_flow_udpip_flow_address;

/* container /processing-elements/ru-elements/transport-flow/udpip-flow */
typedef struct y_o_ran_processing_element_T_processing_elements_ru_elements_transport_flow_udpip_flow_ {
    y_o_ran_processing_element_T_processing_elements_ru_elements_transport_flow_udpip_flow_address v_address;
    val_value_t *v_o_du_ip_address;
    uint16 v_ru_ephemeral_udp_port;
    uint16 v_o_du_ephemeral_udp_port;
    uint16 v_ecpri_destination_udp;
} y_o_ran_processing_element_T_processing_elements_ru_elements_transport_flow_udpip_flow;

/* container /processing-elements/ru-elements/transport-flow */
typedef struct y_o_ran_processing_element_T_processing_elements_ru_elements_transport_flow_ {
    xmlChar *v_interface_name;

#ifdef u_o_ran_interfaces_F_ALIASMAC_BASED_CU_PLANE
    y_o_ran_processing_element_T_processing_elements_ru_elements_transport_flow_aliasmac_flow v_aliasmac_flow;
#endif /* u_o_ran_interfaces_F_ALIASMAC_BASED_CU_PLANE */
    y_o_ran_processing_element_T_processing_elements_ru_elements_transport_flow_eth_flow v_eth_flow;
    y_o_ran_processing_element_T_processing_elements_ru_elements_transport_flow_udpip_flow v_udpip_flow;
} y_o_ran_processing_element_T_processing_elements_ru_elements_transport_flow;

/* list /processing-elements/ru-elements */
typedef struct y_o_ran_processing_element_T_processing_elements_ru_elements_ {
    dlq_hdr_t qhdr;
    xmlChar *v_name;
    y_o_ran_processing_element_T_processing_elements_ru_elements_transport_flow v_transport_flow;
} y_o_ran_processing_element_T_processing_elements_ru_elements;

/* container /processing-elements */
typedef struct y_o_ran_processing_element_T_processing_elements_ {
    xmlChar *v_transport_session_type;
    y_o_ran_processing_element_T_processing_elements_enhanced_uplane_mapping v_enhanced_uplane_mapping;
    dlq_hdr_t v_ru_elements;
} y_o_ran_processing_element_T_processing_elements;


/********************************************************************
* FUNCTION u_o_ran_processing_element_processing_elements_transport_session_type_edit
*
* Edit database object callback
* Path: /processing-elements/transport-session-type
* Add object instrumentation in COMMIT phase.
*
* INPUTS:
*     see agt/agt_cb.h for details
*
* RETURNS:
*     error status
********************************************************************/
extern status_t u_o_ran_processing_element_processing_elements_transport_session_type_edit (
    ses_cb_t *scb,
    rpc_msg_t *msg,
    agt_cbtyp_t cbtyp,
    op_editop_t editop,
    val_value_t *newval,
    val_value_t *curval);


/********************************************************************
* FUNCTION u_o_ran_processing_element_processing_elements_enhanced_uplane_mapping_uplane_mapping_up_markings_ethernet_up_cos_name_edit
*
* Edit database object callback
* Path: /processing-elements/enhanced-uplane-mapping/uplane-mapping/up-markings/ethernet/up-cos-name
* Add object instrumentation in COMMIT phase.
*
* INPUTS:
*     see agt/agt_cb.h for details
*     k_ parameters are ancestor list key values.
*
* RETURNS:
*     error status
********************************************************************/
extern status_t u_o_ran_processing_element_processing_elements_enhanced_uplane_mapping_uplane_mapping_up_markings_ethernet_up_cos_name_edit (
    ses_cb_t *scb,
    rpc_msg_t *msg,
    agt_cbtyp_t cbtyp,
    op_editop_t editop,
    val_value_t *newval,
    val_value_t *curval,
    const xmlChar *k_processing_elements_enhanced_uplane_mapping_uplane_mapping_up_marking_name);


/********************************************************************
* FUNCTION u_o_ran_processing_element_processing_elements_enhanced_uplane_mapping_uplane_mapping_up_markings_ipv4_upv4_dscp_name_edit
*
* Edit database object callback
* Path: /processing-elements/enhanced-uplane-mapping/uplane-mapping/up-markings/ipv4/upv4-dscp-name
* Add object instrumentation in COMMIT phase.
*
* INPUTS:
*     see agt/agt_cb.h for details
*     k_ parameters are ancestor list key values.
*
* RETURNS:
*     error status
********************************************************************/
extern status_t u_o_ran_processing_element_processing_elements_enhanced_uplane_mapping_uplane_mapping_up_markings_ipv4_upv4_dscp_name_edit (
    ses_cb_t *scb,
    rpc_msg_t *msg,
    agt_cbtyp_t cbtyp,
    op_editop_t editop,
    val_value_t *newval,
    val_value_t *curval,
    const xmlChar *k_processing_elements_enhanced_uplane_mapping_uplane_mapping_up_marking_name);


/********************************************************************
* FUNCTION u_o_ran_processing_element_processing_elements_enhanced_uplane_mapping_uplane_mapping_up_markings_ipv6_upv6_dscp_name_edit
*
* Edit database object callback
* Path: /processing-elements/enhanced-uplane-mapping/uplane-mapping/up-markings/ipv6/upv6-dscp-name
* Add object instrumentation in COMMIT phase.
*
* INPUTS:
*     see agt/agt_cb.h for details
*     k_ parameters are ancestor list key values.
*
* RETURNS:
*     error status
********************************************************************/
extern status_t u_o_ran_processing_element_processing_elements_enhanced_uplane_mapping_uplane_mapping_up_markings_ipv6_upv6_dscp_name_edit (
    ses_cb_t *scb,
    rpc_msg_t *msg,
    agt_cbtyp_t cbtyp,
    op_editop_t editop,
    val_value_t *newval,
    val_value_t *curval,
    const xmlChar *k_processing_elements_enhanced_uplane_mapping_uplane_mapping_up_marking_name);


/********************************************************************
* FUNCTION u_o_ran_processing_element_processing_elements_enhanced_uplane_mapping_uplane_mapping_edit
*
* Edit database object callback
* Path: /processing-elements/enhanced-uplane-mapping/uplane-mapping
* Add object instrumentation in COMMIT phase.
*
* INPUTS:
*     see agt/agt_cb.h for details
*     k_ parameters are ancestor list key values.
*
* RETURNS:
*     error status
********************************************************************/
extern status_t u_o_ran_processing_element_processing_elements_enhanced_uplane_mapping_uplane_mapping_edit (
    ses_cb_t *scb,
    rpc_msg_t *msg,
    agt_cbtyp_t cbtyp,
    op_editop_t editop,
    val_value_t *newval,
    val_value_t *curval,
    const xmlChar *k_processing_elements_enhanced_uplane_mapping_uplane_mapping_up_marking_name);


/********************************************************************
* FUNCTION u_o_ran_processing_element_processing_elements_enhanced_uplane_mapping_edit
*
* Edit database object callback
* Path: /processing-elements/enhanced-uplane-mapping
* Add object instrumentation in COMMIT phase.
*
* INPUTS:
*     see agt/agt_cb.h for details
*
* RETURNS:
*     error status
********************************************************************/
extern status_t u_o_ran_processing_element_processing_elements_enhanced_uplane_mapping_edit (
    ses_cb_t *scb,
    rpc_msg_t *msg,
    agt_cbtyp_t cbtyp,
    op_editop_t editop,
    val_value_t *newval,
    val_value_t *curval);


/********************************************************************
* FUNCTION u_o_ran_processing_element_processing_elements_ru_elements_transport_flow_interface_name_edit
*
* Edit database object callback
* Path: /processing-elements/ru-elements/transport-flow/interface-name
* Add object instrumentation in COMMIT phase.
*
* INPUTS:
*     see agt/agt_cb.h for details
*     k_ parameters are ancestor list key values.
*
* RETURNS:
*     error status
********************************************************************/
extern status_t u_o_ran_processing_element_processing_elements_ru_elements_transport_flow_interface_name_edit (
    ses_cb_t *scb,
    rpc_msg_t *msg,
    agt_cbtyp_t cbtyp,
    op_editop_t editop,
    val_value_t *newval,
    val_value_t *curval,
    const xmlChar *k_processing_elements_ru_elements_name);


#ifdef u_o_ran_interfaces_F_ALIASMAC_BASED_CU_PLANE

/********************************************************************
* FUNCTION u_o_ran_processing_element_processing_elements_ru_elements_transport_flow_aliasmac_flow_ru_aliasmac_address_edit
*
* Edit database object callback
* Path: /processing-elements/ru-elements/transport-flow/aliasmac-flow/ru-aliasmac-address
* Add object instrumentation in COMMIT phase.
*
* INPUTS:
*     see agt/agt_cb.h for details
*     k_ parameters are ancestor list key values.
*
* RETURNS:
*     error status
********************************************************************/
extern status_t u_o_ran_processing_element_processing_elements_ru_elements_transport_flow_aliasmac_flow_ru_aliasmac_address_edit (
    ses_cb_t *scb,
    rpc_msg_t *msg,
    agt_cbtyp_t cbtyp,
    op_editop_t editop,
    val_value_t *newval,
    val_value_t *curval,
    const xmlChar *k_processing_elements_ru_elements_name);


/********************************************************************
* FUNCTION u_o_ran_processing_element_processing_elements_ru_elements_transport_flow_aliasmac_flow_vlan_id_edit
*
* Edit database object callback
* Path: /processing-elements/ru-elements/transport-flow/aliasmac-flow/vlan-id
* Add object instrumentation in COMMIT phase.
*
* INPUTS:
*     see agt/agt_cb.h for details
*     k_ parameters are ancestor list key values.
*
* RETURNS:
*     error status
********************************************************************/
extern status_t u_o_ran_processing_element_processing_elements_ru_elements_transport_flow_aliasmac_flow_vlan_id_edit (
    ses_cb_t *scb,
    rpc_msg_t *msg,
    agt_cbtyp_t cbtyp,
    op_editop_t editop,
    val_value_t *newval,
    val_value_t *curval,
    const xmlChar *k_processing_elements_ru_elements_name);


/********************************************************************
* FUNCTION u_o_ran_processing_element_processing_elements_ru_elements_transport_flow_aliasmac_flow_o_du_mac_address_edit
*
* Edit database object callback
* Path: /processing-elements/ru-elements/transport-flow/aliasmac-flow/o-du-mac-address
* Add object instrumentation in COMMIT phase.
*
* INPUTS:
*     see agt/agt_cb.h for details
*     k_ parameters are ancestor list key values.
*
* RETURNS:
*     error status
********************************************************************/
extern status_t u_o_ran_processing_element_processing_elements_ru_elements_transport_flow_aliasmac_flow_o_du_mac_address_edit (
    ses_cb_t *scb,
    rpc_msg_t *msg,
    agt_cbtyp_t cbtyp,
    op_editop_t editop,
    val_value_t *newval,
    val_value_t *curval,
    const xmlChar *k_processing_elements_ru_elements_name);

/********************************************************************
* FUNCTION u_o_ran_processing_element_processing_elements_ru_elements_transport_flow_aliasmac_flow_edit
*
* Edit database object callback
* Path: /processing-elements/ru-elements/transport-flow/aliasmac-flow
* Add object instrumentation in COMMIT phase.
*
* INPUTS:
*     see agt/agt_cb.h for details
*     k_ parameters are ancestor list key values.
*
* RETURNS:
*     error status
********************************************************************/
extern status_t u_o_ran_processing_element_processing_elements_ru_elements_transport_flow_aliasmac_flow_edit (
    ses_cb_t *scb,
    rpc_msg_t *msg,
    agt_cbtyp_t cbtyp,
    op_editop_t editop,
    val_value_t *newval,
    val_value_t *curval,
    const xmlChar *k_processing_elements_ru_elements_name);

#endif /* u_o_ran_interfaces_F_ALIASMAC_BASED_CU_PLANE */

/********************************************************************
* FUNCTION u_o_ran_processing_element_processing_elements_ru_elements_transport_flow_eth_flow_ru_mac_address_edit
*
* Edit database object callback
* Path: /processing-elements/ru-elements/transport-flow/eth-flow/ru-mac-address
* Add object instrumentation in COMMIT phase.
*
* INPUTS:
*     see agt/agt_cb.h for details
*     k_ parameters are ancestor list key values.
*
* RETURNS:
*     error status
********************************************************************/
extern status_t u_o_ran_processing_element_processing_elements_ru_elements_transport_flow_eth_flow_ru_mac_address_edit (
    ses_cb_t *scb,
    rpc_msg_t *msg,
    agt_cbtyp_t cbtyp,
    op_editop_t editop,
    val_value_t *newval,
    val_value_t *curval,
    const xmlChar *k_processing_elements_ru_elements_name);


/********************************************************************
* FUNCTION u_o_ran_processing_element_processing_elements_ru_elements_transport_flow_eth_flow_vlan_id_edit
*
* Edit database object callback
* Path: /processing-elements/ru-elements/transport-flow/eth-flow/vlan-id
* Add object instrumentation in COMMIT phase.
*
* INPUTS:
*     see agt/agt_cb.h for details
*     k_ parameters are ancestor list key values.
*
* RETURNS:
*     error status
********************************************************************/
extern status_t u_o_ran_processing_element_processing_elements_ru_elements_transport_flow_eth_flow_vlan_id_edit (
    ses_cb_t *scb,
    rpc_msg_t *msg,
    agt_cbtyp_t cbtyp,
    op_editop_t editop,
    val_value_t *newval,
    val_value_t *curval,
    const xmlChar *k_processing_elements_ru_elements_name);


/********************************************************************
* FUNCTION u_o_ran_processing_element_processing_elements_ru_elements_transport_flow_eth_flow_o_du_mac_address_edit
*
* Edit database object callback
* Path: /processing-elements/ru-elements/transport-flow/eth-flow/o-du-mac-address
* Add object instrumentation in COMMIT phase.
*
* INPUTS:
*     see agt/agt_cb.h for details
*     k_ parameters are ancestor list key values.
*
* RETURNS:
*     error status
********************************************************************/
extern status_t u_o_ran_processing_element_processing_elements_ru_elements_transport_flow_eth_flow_o_du_mac_address_edit (
    ses_cb_t *scb,
    rpc_msg_t *msg,
    agt_cbtyp_t cbtyp,
    op_editop_t editop,
    val_value_t *newval,
    val_value_t *curval,
    const xmlChar *k_processing_elements_ru_elements_name);


/********************************************************************
* FUNCTION u_o_ran_processing_element_processing_elements_ru_elements_transport_flow_eth_flow_edit
*
* Edit database object callback
* Path: /processing-elements/ru-elements/transport-flow/eth-flow
* Add object instrumentation in COMMIT phase.
*
* INPUTS:
*     see agt/agt_cb.h for details
*     k_ parameters are ancestor list key values.
*
* RETURNS:
*     error status
********************************************************************/
extern status_t u_o_ran_processing_element_processing_elements_ru_elements_transport_flow_eth_flow_edit (
    ses_cb_t *scb,
    rpc_msg_t *msg,
    agt_cbtyp_t cbtyp,
    op_editop_t editop,
    val_value_t *newval,
    val_value_t *curval,
    const xmlChar *k_processing_elements_ru_elements_name);


/********************************************************************
* FUNCTION u_o_ran_processing_element_processing_elements_ru_elements_transport_flow_udpip_flow_address_ru_ipv4_address_ru_ipv4_address_edit
*
* Edit database object callback
* Path: /processing-elements/ru-elements/transport-flow/udpip-flow/address/ru-ipv4-address/ru-ipv4-address
* Add object instrumentation in COMMIT phase.
*
* INPUTS:
*     see agt/agt_cb.h for details
*     k_ parameters are ancestor list key values.
*
* RETURNS:
*     error status
********************************************************************/
extern status_t u_o_ran_processing_element_processing_elements_ru_elements_transport_flow_udpip_flow_address_ru_ipv4_address_ru_ipv4_address_edit (
    ses_cb_t *scb,
    rpc_msg_t *msg,
    agt_cbtyp_t cbtyp,
    op_editop_t editop,
    val_value_t *newval,
    val_value_t *curval,
    const xmlChar *k_processing_elements_ru_elements_name);


/********************************************************************
* FUNCTION u_o_ran_processing_element_processing_elements_ru_elements_transport_flow_udpip_flow_address_ru_ipv6_address_ru_ipv6_address_edit
*
* Edit database object callback
* Path: /processing-elements/ru-elements/transport-flow/udpip-flow/address/ru-ipv6-address/ru-ipv6-address
* Add object instrumentation in COMMIT phase.
*
* INPUTS:
*     see agt/agt_cb.h for details
*     k_ parameters are ancestor list key values.
*
* RETURNS:
*     error status
********************************************************************/
extern status_t u_o_ran_processing_element_processing_elements_ru_elements_transport_flow_udpip_flow_address_ru_ipv6_address_ru_ipv6_address_edit (
    ses_cb_t *scb,
    rpc_msg_t *msg,
    agt_cbtyp_t cbtyp,
    op_editop_t editop,
    val_value_t *newval,
    val_value_t *curval,
    const xmlChar *k_processing_elements_ru_elements_name);


/********************************************************************
* FUNCTION u_o_ran_processing_element_processing_elements_ru_elements_transport_flow_udpip_flow_o_du_ip_address_edit
*
* Edit database object callback
* Path: /processing-elements/ru-elements/transport-flow/udpip-flow/o-du-ip-address
* Add object instrumentation in COMMIT phase.
*
* INPUTS:
*     see agt/agt_cb.h for details
*     k_ parameters are ancestor list key values.
*
* RETURNS:
*     error status
********************************************************************/
extern status_t u_o_ran_processing_element_processing_elements_ru_elements_transport_flow_udpip_flow_o_du_ip_address_edit (
    ses_cb_t *scb,
    rpc_msg_t *msg,
    agt_cbtyp_t cbtyp,
    op_editop_t editop,
    val_value_t *newval,
    val_value_t *curval,
    const xmlChar *k_processing_elements_ru_elements_name);


/********************************************************************
* FUNCTION u_o_ran_processing_element_processing_elements_ru_elements_transport_flow_udpip_flow_ru_ephemeral_udp_port_edit
*
* Edit database object callback
* Path: /processing-elements/ru-elements/transport-flow/udpip-flow/ru-ephemeral-udp-port
* Add object instrumentation in COMMIT phase.
*
* INPUTS:
*     see agt/agt_cb.h for details
*     k_ parameters are ancestor list key values.
*
* RETURNS:
*     error status
********************************************************************/
extern status_t u_o_ran_processing_element_processing_elements_ru_elements_transport_flow_udpip_flow_ru_ephemeral_udp_port_edit (
    ses_cb_t *scb,
    rpc_msg_t *msg,
    agt_cbtyp_t cbtyp,
    op_editop_t editop,
    val_value_t *newval,
    val_value_t *curval,
    const xmlChar *k_processing_elements_ru_elements_name);


/********************************************************************
* FUNCTION u_o_ran_processing_element_processing_elements_ru_elements_transport_flow_udpip_flow_o_du_ephemeral_udp_port_edit
*
* Edit database object callback
* Path: /processing-elements/ru-elements/transport-flow/udpip-flow/o-du-ephemeral-udp-port
* Add object instrumentation in COMMIT phase.
*
* INPUTS:
*     see agt/agt_cb.h for details
*     k_ parameters are ancestor list key values.
*
* RETURNS:
*     error status
********************************************************************/
extern status_t u_o_ran_processing_element_processing_elements_ru_elements_transport_flow_udpip_flow_o_du_ephemeral_udp_port_edit (
    ses_cb_t *scb,
    rpc_msg_t *msg,
    agt_cbtyp_t cbtyp,
    op_editop_t editop,
    val_value_t *newval,
    val_value_t *curval,
    const xmlChar *k_processing_elements_ru_elements_name);


/********************************************************************
* FUNCTION u_o_ran_processing_element_processing_elements_ru_elements_transport_flow_udpip_flow_ecpri_destination_udp_edit
*
* Edit database object callback
* Path: /processing-elements/ru-elements/transport-flow/udpip-flow/ecpri-destination-udp
* Add object instrumentation in COMMIT phase.
*
* INPUTS:
*     see agt/agt_cb.h for details
*     k_ parameters are ancestor list key values.
*
* RETURNS:
*     error status
********************************************************************/
extern status_t u_o_ran_processing_element_processing_elements_ru_elements_transport_flow_udpip_flow_ecpri_destination_udp_edit (
    ses_cb_t *scb,
    rpc_msg_t *msg,
    agt_cbtyp_t cbtyp,
    op_editop_t editop,
    val_value_t *newval,
    val_value_t *curval,
    const xmlChar *k_processing_elements_ru_elements_name);


/********************************************************************
* FUNCTION u_o_ran_processing_element_processing_elements_ru_elements_transport_flow_udpip_flow_edit
*
* Edit database object callback
* Path: /processing-elements/ru-elements/transport-flow/udpip-flow
* Add object instrumentation in COMMIT phase.
*
* INPUTS:
*     see agt/agt_cb.h for details
*     k_ parameters are ancestor list key values.
*
* RETURNS:
*     error status
********************************************************************/
extern status_t u_o_ran_processing_element_processing_elements_ru_elements_transport_flow_udpip_flow_edit (
    ses_cb_t *scb,
    rpc_msg_t *msg,
    agt_cbtyp_t cbtyp,
    op_editop_t editop,
    val_value_t *newval,
    val_value_t *curval,
    const xmlChar *k_processing_elements_ru_elements_name);


/********************************************************************
* FUNCTION u_o_ran_processing_element_processing_elements_ru_elements_transport_flow_edit
*
* Edit database object callback
* Path: /processing-elements/ru-elements/transport-flow
* Add object instrumentation in COMMIT phase.
*
* INPUTS:
*     see agt/agt_cb.h for details
*     k_ parameters are ancestor list key values.
*
* RETURNS:
*     error status
********************************************************************/
extern status_t u_o_ran_processing_element_processing_elements_ru_elements_transport_flow_edit (
    ses_cb_t *scb,
    rpc_msg_t *msg,
    agt_cbtyp_t cbtyp,
    op_editop_t editop,
    val_value_t *newval,
    val_value_t *curval,
    const xmlChar *k_processing_elements_ru_elements_name);


/********************************************************************
* FUNCTION u_o_ran_processing_element_processing_elements_ru_elements_edit
*
* Edit database object callback
* Path: /processing-elements/ru-elements
* Add object instrumentation in COMMIT phase.
*
* INPUTS:
*     see agt/agt_cb.h for details
*     k_ parameters are ancestor list key values.
*
* RETURNS:
*     error status
********************************************************************/
extern status_t u_o_ran_processing_element_processing_elements_ru_elements_edit (
    ses_cb_t *scb,
    rpc_msg_t *msg,
    agt_cbtyp_t cbtyp,
    op_editop_t editop,
    val_value_t *newval,
    val_value_t *curval,
    const xmlChar *k_processing_elements_ru_elements_name);


/********************************************************************
* FUNCTION u_o_ran_processing_element_processing_elements_edit
*
* Edit database object callback
* Path: /processing-elements
* Add object instrumentation in COMMIT phase.
*
* INPUTS:
*     see agt/agt_cb.h for details
*
* RETURNS:
*     error status
********************************************************************/
extern status_t u_o_ran_processing_element_processing_elements_edit (
    ses_cb_t *scb,
    rpc_msg_t *msg,
    agt_cbtyp_t cbtyp,
    op_editop_t editop,
    val_value_t *newval,
    val_value_t *curval);

/********************************************************************
* FUNCTION u_o_ran_processing_element_init
*
* initialize the o-ran-processing-element server instrumentation library
*
* INPUTS:
*    modname == requested module name
*    revision == requested version (NULL for any)
*
* RETURNS:
*     error status
********************************************************************/
extern status_t u_o_ran_processing_element_init (
    const xmlChar *modname,
    const xmlChar *revision);

/********************************************************************
* FUNCTION u_o_ran_processing_element_init2
*
* SIL init phase 2: non-config data structures
* Called after running config is loaded
*
* RETURNS:
*     error status
********************************************************************/
extern status_t u_o_ran_processing_element_init2 (void);

/********************************************************************
* FUNCTION u_o_ran_processing_element_cleanup
*    cleanup the server instrumentation library
*
********************************************************************/
extern void u_o_ran_processing_element_cleanup (void);

#ifdef __cplusplus
} /* end extern 'C' */
#endif

#endif
