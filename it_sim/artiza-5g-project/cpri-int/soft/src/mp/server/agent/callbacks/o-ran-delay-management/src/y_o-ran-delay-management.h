
#ifndef _H_y_o_ran_delay_management
#define _H_y_o_ran_delay_management
/*
 * Copyright (c) 2008 - 2012, Andy Bierman, All Rights Reserved.
 * Copyright (c) 2012 - 2019, YumaWorks, Inc., All Rights Reserved.
 *
 * Unless required by applicable law or agreed to in writing,
 * software distributed under the License is distributed on an
 * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
 * KIND, either express or implied.  See the License for the
 * specific language governing permissions and limitations
 * under the License.
 *

*** Generated by yangdump-sdk 18.10-15

    YumaPro SIL-SA header
    module o-ran-delay-management
    revision 2019-02-04
    namespace urn:o-ran:delay:1.0
    organization O-RAN Alliance
    Created: 2019-12-20T02:20:29Z
    CLI parameters:
        format yh
        indent 4
        module o-ran-delay-management
        output y_o-ran-delay-management.h
        sil-get2
        sil-sa
        unified true

 */

#include <xmlstring.h>

#include "dlq.h"
#include "ncxtypes.h"
#include "op.h"
#include "status.h"
#include "val.h"

#ifdef __cplusplus
extern "C" {
#endif

#define y_o_ran_delay_management_M_o_ran_delay_management (const xmlChar *)"o-ran-delay-management"

#define y_o_ran_delay_management_R_o_ran_delay_management (const xmlChar *)"2019-02-04"

#define y_o_ran_delay_management_N_adaptive_delay_configuration (const xmlChar *)"adaptive-delay-configuration"
#define y_o_ran_delay_management_N_bandwidth (const xmlChar *)"bandwidth"
#define y_o_ran_delay_management_N_bandwidth_scs_delay_state (const xmlChar *)"bandwidth-scs-delay-state"
#define y_o_ran_delay_management_N_delay_management (const xmlChar *)"delay-management"
#define y_o_ran_delay_management_N_o_du_delay_profile (const xmlChar *)"o-du-delay-profile"
#define y_o_ran_delay_management_N_ru_delay_profile (const xmlChar *)"ru-delay-profile"
#define y_o_ran_delay_management_N_rx_max (const xmlChar *)"rx-max"
#define y_o_ran_delay_management_N_subcarrier_spacing (const xmlChar *)"subcarrier-spacing"
#define y_o_ran_delay_management_N_t12_max (const xmlChar *)"t12-max"
#define y_o_ran_delay_management_N_t12_min (const xmlChar *)"t12-min"
#define y_o_ran_delay_management_N_t1a_max_up (const xmlChar *)"t1a-max-up"
#define y_o_ran_delay_management_N_t2a_max_cp_dl (const xmlChar *)"t2a-max-cp-dl"
#define y_o_ran_delay_management_N_t2a_max_cp_ul (const xmlChar *)"t2a-max-cp-ul"
#define y_o_ran_delay_management_N_t2a_max_up (const xmlChar *)"t2a-max-up"
#define y_o_ran_delay_management_N_t2a_min_cp_dl (const xmlChar *)"t2a-min-cp-dl"
#define y_o_ran_delay_management_N_t2a_min_cp_ul (const xmlChar *)"t2a-min-cp-ul"
#define y_o_ran_delay_management_N_t2a_min_up (const xmlChar *)"t2a-min-up"
#define y_o_ran_delay_management_N_t34_max (const xmlChar *)"t34-max"
#define y_o_ran_delay_management_N_t34_min (const xmlChar *)"t34-min"
#define y_o_ran_delay_management_N_ta3_max (const xmlChar *)"ta3-max"
#define y_o_ran_delay_management_N_ta3_min (const xmlChar *)"ta3-min"
#define y_o_ran_delay_management_N_ta4_max (const xmlChar *)"ta4-max"
#define y_o_ran_delay_management_N_tcp_adv_dl (const xmlChar *)"tcp-adv-dl"
#define y_o_ran_delay_management_N_transport_delay (const xmlChar *)"transport-delay"
#define y_o_ran_delay_management_N_tx_max (const xmlChar *)"tx-max"


/********************************************************************
* FUNCTION y_o_ran_delay_management_init
*
* initialize the o-ran-delay-management server instrumentation library
*
* INPUTS:
*    modname == requested module name
*    revision == requested version (NULL for any)
*
* RETURNS:
*     error status
********************************************************************/
extern status_t y_o_ran_delay_management_init (
    const xmlChar *modname,
    const xmlChar *revision);

/********************************************************************
* FUNCTION y_o_ran_delay_management_init2
*
* SIL init phase 2: non-config data structures
* Called after running config is loaded
*
* RETURNS:
*     error status
********************************************************************/
extern status_t y_o_ran_delay_management_init2 (void);

/********************************************************************
* FUNCTION y_o_ran_delay_management_cleanup
*    cleanup the server instrumentation library
*
********************************************************************/
extern void y_o_ran_delay_management_cleanup (void);

#ifdef __cplusplus
} /* end extern 'C' */
#endif

#endif
