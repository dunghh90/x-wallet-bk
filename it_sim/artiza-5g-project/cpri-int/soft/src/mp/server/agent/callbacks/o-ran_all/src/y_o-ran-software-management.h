
#ifndef _H_y_o_ran_software_management
#define _H_y_o_ran_software_management
/*
 * Copyright (c) 2008 - 2012, Andy Bierman, All Rights Reserved.
 * Copyright (c) 2012 - 2019, YumaWorks, Inc., All Rights Reserved.
 *
 * Unless required by applicable law or agreed to in writing,
 * software distributed under the License is distributed on an
 * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
 * KIND, either express or implied.  See the License for the
 * specific language governing permissions and limitations
 * under the License.
 *

*** Generated by yangdump-sdk 18.10-15

    YumaPro SIL-SA header
    bundle o-ran_all
    module o-ran-software-management
    revision 2019-02-04
    namespace urn:o-ran:software-management:1.0
    organization O-RAN Alliance
    Created: 2019-12-20T02:20:30Z
    CLI parameters:
        defnames true
        format yh
        indent 4
        module ietf-yang-types
        module ietf-inet-types
        module ietf-interfaces
        module iana-if-type
        module ietf-ip
        module iana-hardware
        module ietf-hardware
        module ietf-netconf-acm
        module o-ran-hardware
        module o-ran-software-management
        module o-ran-interfaces
        module o-ran-transceiver
        module o-ran-mplane-int
        module o-ran-dhcp
        module o-ran-compression-factors
        module o-ran-uplane-conf
        module o-ran-module-cap
        module o-ran-processing-element
        module o-ran-performance-management
        module o-ran-fm
        module o-ran-lbm
        module o-ran-supervision
        module o-ran-beamforming
        module o-ran-operations
        module o-ran-usermgmt
        module o-ran-sync
        sil-bundle o-ran_all
        sil-get2
        sil-sa
        unified true

 */

#include <xmlstring.h>

#include "dlq.h"
#include "ncxtypes.h"
#include "op.h"
#include "status.h"
#include "val.h"

#ifdef __cplusplus
extern "C" {
#endif

#define y_o_ran_software_management_M_o_ran_software_management (const xmlChar *)"o-ran-software-management"

#define y_o_ran_software_management_R_o_ran_software_management (const xmlChar *)"2019-02-04"

#define y_o_ran_software_management_N_access (const xmlChar *)"access"
#define y_o_ran_software_management_N_activation_event (const xmlChar *)"activation-event"
#define y_o_ran_software_management_N_active (const xmlChar *)"active"
#define y_o_ran_software_management_N_build_id (const xmlChar *)"build-id"
#define y_o_ran_software_management_N_build_name (const xmlChar *)"build-name"
#define y_o_ran_software_management_N_build_version (const xmlChar *)"build-version"
#define y_o_ran_software_management_N_certificate (const xmlChar *)"certificate"
#define y_o_ran_software_management_N_credentials (const xmlChar *)"credentials"
#define y_o_ran_software_management_N_download_event (const xmlChar *)"download-event"
#define y_o_ran_software_management_N_error_message (const xmlChar *)"error-message"
#define y_o_ran_software_management_N_file_name (const xmlChar *)"file-name"
#define y_o_ran_software_management_N_file_names (const xmlChar *)"file-names"
#define y_o_ran_software_management_N_files (const xmlChar *)"files"
#define y_o_ran_software_management_N_install_event (const xmlChar *)"install-event"
#define y_o_ran_software_management_N_integrity (const xmlChar *)"integrity"
#define y_o_ran_software_management_N_local_path (const xmlChar *)"local-path"
#define y_o_ran_software_management_N_name (const xmlChar *)"name"
#define y_o_ran_software_management_N_notification_timeout (const xmlChar *)"notification-timeout"
#define y_o_ran_software_management_N_password (const xmlChar *)"password"
#define y_o_ran_software_management_N_product_code (const xmlChar *)"product-code"
#define y_o_ran_software_management_N_remote_file_path (const xmlChar *)"remote-file-path"
#define y_o_ran_software_management_N_return_code (const xmlChar *)"return-code"
#define y_o_ran_software_management_N_running (const xmlChar *)"running"
#define y_o_ran_software_management_N_slot_name (const xmlChar *)"slot-name"
#define y_o_ran_software_management_N_software_activate (const xmlChar *)"software-activate"
#define y_o_ran_software_management_N_software_download (const xmlChar *)"software-download"
#define y_o_ran_software_management_N_software_install (const xmlChar *)"software-install"
#define y_o_ran_software_management_N_software_inventory (const xmlChar *)"software-inventory"
#define y_o_ran_software_management_N_software_slot (const xmlChar *)"software-slot"
#define y_o_ran_software_management_N_status (const xmlChar *)"status"
#define y_o_ran_software_management_N_vendor_code (const xmlChar *)"vendor-code"
#define y_o_ran_software_management_N_version (const xmlChar *)"version"


/********************************************************************
* FUNCTION y_o_ran_software_management_init
*
* initialize the o-ran-software-management server instrumentation library
*
* INPUTS:
*    modname == requested module name
*    revision == requested version (NULL for any)
*
* RETURNS:
*     error status
********************************************************************/
extern status_t y_o_ran_software_management_init (
    const xmlChar *modname,
    const xmlChar *revision);

/********************************************************************
* FUNCTION y_o_ran_software_management_init2
*
* SIL init phase 2: non-config data structures
* Called after running config is loaded
*
* RETURNS:
*     error status
********************************************************************/
extern status_t y_o_ran_software_management_init2 (void);

/********************************************************************
* FUNCTION y_o_ran_software_management_cleanup
*    cleanup the server instrumentation library
*
********************************************************************/
extern void y_o_ran_software_management_cleanup (void);

#ifdef __cplusplus
} /* end extern 'C' */
#endif

#endif
