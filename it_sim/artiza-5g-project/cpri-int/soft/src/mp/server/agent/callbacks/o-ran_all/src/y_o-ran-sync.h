
#ifndef _H_y_o_ran_sync
#define _H_y_o_ran_sync
/*
 * Copyright (c) 2008 - 2012, Andy Bierman, All Rights Reserved.
 * Copyright (c) 2012 - 2019, YumaWorks, Inc., All Rights Reserved.
 *
 * Unless required by applicable law or agreed to in writing,
 * software distributed under the License is distributed on an
 * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
 * KIND, either express or implied.  See the License for the
 * specific language governing permissions and limitations
 * under the License.
 *

*** Generated by yangdump-sdk 18.10-15

    YumaPro SIL-SA header
    bundle o-ran_all
    module o-ran-sync
    revision 2019-02-04
    namespace urn:o-ran:sync:1.0
    organization O-RAN Alliance
    Created: 2019-12-20T02:20:30Z
    CLI parameters:
        defnames true
        format yh
        indent 4
        module ietf-yang-types
        module ietf-inet-types
        module ietf-interfaces
        module iana-if-type
        module ietf-ip
        module iana-hardware
        module ietf-hardware
        module ietf-netconf-acm
        module o-ran-hardware
        module o-ran-software-management
        module o-ran-interfaces
        module o-ran-transceiver
        module o-ran-mplane-int
        module o-ran-dhcp
        module o-ran-compression-factors
        module o-ran-uplane-conf
        module o-ran-module-cap
        module o-ran-processing-element
        module o-ran-performance-management
        module o-ran-fm
        module o-ran-lbm
        module o-ran-supervision
        module o-ran-beamforming
        module o-ran-operations
        module o-ran-usermgmt
        module o-ran-sync
        sil-bundle o-ran_all
        sil-get2
        sil-sa
        unified true

 */

#include <xmlstring.h>

#include "dlq.h"
#include "ncxtypes.h"
#include "op.h"
#include "status.h"
#include "val.h"

#ifdef __cplusplus
extern "C" {
#endif

#define y_o_ran_sync_M_o_ran_sync (const xmlChar *)"o-ran-sync"

#define y_o_ran_sync_R_o_ran_sync (const xmlChar *)"2019-02-04"

#define y_o_ran_sync_N_acceptance_list_of_ssm (const xmlChar *)"acceptance-list-of-ssm"
#define y_o_ran_sync_N_accepted_clock_classes (const xmlChar *)"accepted-clock-classes"
#define y_o_ran_sync_N_altitude (const xmlChar *)"altitude"
#define y_o_ran_sync_N_anti_jam_enable (const xmlChar *)"anti-jam-enable"
#define y_o_ran_sync_N_cable_delay (const xmlChar *)"cable-delay"
#define y_o_ran_sync_N_clock_accuracy (const xmlChar *)"clock-accuracy"
#define y_o_ran_sync_N_clock_class (const xmlChar *)"clock-class"
#define y_o_ran_sync_N_clock_classes (const xmlChar *)"clock-classes"
#define y_o_ran_sync_N_clock_identity (const xmlChar *)"clock-identity"
#define y_o_ran_sync_N_current_utc_offset (const xmlChar *)"current-utc-offset"
#define y_o_ran_sync_N_current_utc_offset_valid (const xmlChar *)"current-utc-offset-valid"
#define y_o_ran_sync_N_delay_asymmetry (const xmlChar *)"delay-asymmetry"
#define y_o_ran_sync_N_domain_number (const xmlChar *)"domain-number"
#define y_o_ran_sync_N_enable (const xmlChar *)"enable"
#define y_o_ran_sync_N_frequency_traceable (const xmlChar *)"frequency-traceable"
#define y_o_ran_sync_N_g_8275_1_config (const xmlChar *)"g-8275-1-config"
#define y_o_ran_sync_N_g_8275_2_config (const xmlChar *)"g-8275-2-config"
#define y_o_ran_sync_N_gnss_config (const xmlChar *)"gnss-config"
#define y_o_ran_sync_N_gnss_data (const xmlChar *)"gnss-data"
#define y_o_ran_sync_N_gnss_state (const xmlChar *)"gnss-state"
#define y_o_ran_sync_N_gnss_state_change (const xmlChar *)"gnss-state-change"
#define y_o_ran_sync_N_gnss_status (const xmlChar *)"gnss-status"
#define y_o_ran_sync_N_gnss_sync_status (const xmlChar *)"gnss-sync-status"
#define y_o_ran_sync_N_grandmaster_clock_identity (const xmlChar *)"grandmaster-clock-identity"
#define y_o_ran_sync_N_ip_address (const xmlChar *)"ip-address"
#define y_o_ran_sync_N_item (const xmlChar *)"item"
#define y_o_ran_sync_N_latitude (const xmlChar *)"latitude"
#define y_o_ran_sync_N_leap59 (const xmlChar *)"leap59"
#define y_o_ran_sync_N_leap61 (const xmlChar *)"leap61"
#define y_o_ran_sync_N_local_ip_port (const xmlChar *)"local-ip-port"
#define y_o_ran_sync_N_local_port_number (const xmlChar *)"local-port-number"
#define y_o_ran_sync_N_local_priority (const xmlChar *)"local-priority"
#define y_o_ran_sync_N_location (const xmlChar *)"location"
#define y_o_ran_sync_N_lock_state (const xmlChar *)"lock-state"
#define y_o_ran_sync_N_log_inter_announce_period (const xmlChar *)"log-inter-announce-period"
#define y_o_ran_sync_N_log_inter_sync_period (const xmlChar *)"log-inter-sync-period"
#define y_o_ran_sync_N_longitude (const xmlChar *)"longitude"
#define y_o_ran_sync_N_master_ip_configuration (const xmlChar *)"master-ip-configuration"
#define y_o_ran_sync_N_multicast_mac_address (const xmlChar *)"multicast-mac-address"
#define y_o_ran_sync_N_name (const xmlChar *)"name"
#define y_o_ran_sync_N_offset_scaled_log_variance (const xmlChar *)"offset-scaled-log-variance"
#define y_o_ran_sync_N_partial_timing_supported (const xmlChar *)"partial-timing-supported"
#define y_o_ran_sync_N_polarity (const xmlChar *)"polarity"
#define y_o_ran_sync_N_priority1 (const xmlChar *)"priority1"
#define y_o_ran_sync_N_priority2 (const xmlChar *)"priority2"
#define y_o_ran_sync_N_ptp_config (const xmlChar *)"ptp-config"
#define y_o_ran_sync_N_ptp_profile (const xmlChar *)"ptp-profile"
#define y_o_ran_sync_N_ptp_state (const xmlChar *)"ptp-state"
#define y_o_ran_sync_N_ptp_state_change (const xmlChar *)"ptp-state-change"
#define y_o_ran_sync_N_ptp_status (const xmlChar *)"ptp-status"
#define y_o_ran_sync_N_ptp_timescale (const xmlChar *)"ptp-timescale"
#define y_o_ran_sync_N_quality_level (const xmlChar *)"quality-level"
#define y_o_ran_sync_N_reporting_period (const xmlChar *)"reporting-period"
#define y_o_ran_sync_N_satellite_constelation_list (const xmlChar *)"satellite-constelation-list"
#define y_o_ran_sync_N_satellites_tracked (const xmlChar *)"satellites-tracked"
#define y_o_ran_sync_N_source_clock_identity (const xmlChar *)"source-clock-identity"
#define y_o_ran_sync_N_source_port_number (const xmlChar *)"source-port-number"
#define y_o_ran_sync_N_sources (const xmlChar *)"sources"
#define y_o_ran_sync_N_ssm_timeout (const xmlChar *)"ssm-timeout"
#define y_o_ran_sync_N_state (const xmlChar *)"state"
#define y_o_ran_sync_N_steps_removed (const xmlChar *)"steps-removed"
#define y_o_ran_sync_N_supported_reference_types (const xmlChar *)"supported-reference-types"
#define y_o_ran_sync_N_sync (const xmlChar *)"sync"
#define y_o_ran_sync_N_sync_capability (const xmlChar *)"sync-capability"
#define y_o_ran_sync_N_sync_state (const xmlChar *)"sync-state"
#define y_o_ran_sync_N_sync_status (const xmlChar *)"sync-status"
#define y_o_ran_sync_N_sync_t_tsc (const xmlChar *)"sync-t-tsc"
#define y_o_ran_sync_N_synce_config (const xmlChar *)"synce-config"
#define y_o_ran_sync_N_synce_state (const xmlChar *)"synce-state"
#define y_o_ran_sync_N_synce_state_change (const xmlChar *)"synce-state-change"
#define y_o_ran_sync_N_synce_status (const xmlChar *)"synce-status"
#define y_o_ran_sync_N_synchronization_state_change (const xmlChar *)"synchronization-state-change"
#define y_o_ran_sync_N_time_source (const xmlChar *)"time-source"
#define y_o_ran_sync_N_time_traceable (const xmlChar *)"time-traceable"
#define y_o_ran_sync_N_two_step_flag (const xmlChar *)"two-step-flag"


/********************************************************************
* FUNCTION y_o_ran_sync_init
*
* initialize the o-ran-sync server instrumentation library
*
* INPUTS:
*    modname == requested module name
*    revision == requested version (NULL for any)
*
* RETURNS:
*     error status
********************************************************************/
extern status_t y_o_ran_sync_init (
    const xmlChar *modname,
    const xmlChar *revision);

/********************************************************************
* FUNCTION y_o_ran_sync_init2
*
* SIL init phase 2: non-config data structures
* Called after running config is loaded
*
* RETURNS:
*     error status
********************************************************************/
extern status_t y_o_ran_sync_init2 (void);

/********************************************************************
* FUNCTION y_o_ran_sync_cleanup
*    cleanup the server instrumentation library
*
********************************************************************/
extern void y_o_ran_sync_cleanup (void);

#ifdef __cplusplus
} /* end extern 'C' */
#endif

#endif
