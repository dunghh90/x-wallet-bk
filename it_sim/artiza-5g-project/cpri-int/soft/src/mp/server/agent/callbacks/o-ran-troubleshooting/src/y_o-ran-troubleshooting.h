
#ifndef _H_y_o_ran_troubleshooting
#define _H_y_o_ran_troubleshooting
/*
 * Copyright (c) 2008 - 2012, Andy Bierman, All Rights Reserved.
 * Copyright (c) 2012 - 2019, YumaWorks, Inc., All Rights Reserved.
 *
 * Unless required by applicable law or agreed to in writing,
 * software distributed under the License is distributed on an
 * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
 * KIND, either express or implied.  See the License for the
 * specific language governing permissions and limitations
 * under the License.
 *

*** Generated by yangdump-sdk 18.10-15

    YumaPro SIL-SA header
    module o-ran-troubleshooting
    revision 2019-02-04
    namespace urn:o-ran:troubleshooting:1.0
    organization O-RAN Alliance
    Created: 2019-12-20T02:20:28Z
    CLI parameters:
        format yh
        indent 4
        module o-ran-troubleshooting
        output y_o-ran-troubleshooting.h
        sil-get2
        sil-sa
        unified true

 */

#include <xmlstring.h>

#include "dlq.h"
#include "ncxtypes.h"
#include "op.h"
#include "status.h"
#include "val.h"

#ifdef __cplusplus
extern "C" {
#endif

#define y_o_ran_troubleshooting_M_o_ran_troubleshooting (const xmlChar *)"o-ran-troubleshooting"

#define y_o_ran_troubleshooting_R_o_ran_troubleshooting (const xmlChar *)"2019-02-04"

#define y_o_ran_troubleshooting_N_failure_reason (const xmlChar *)"failure-reason"
#define y_o_ran_troubleshooting_N_log_file_name (const xmlChar *)"log-file-name"
#define y_o_ran_troubleshooting_N_start_troubleshooting_logs (const xmlChar *)"start-troubleshooting-logs"
#define y_o_ran_troubleshooting_N_status (const xmlChar *)"status"
#define y_o_ran_troubleshooting_N_stop_troubleshooting_logs (const xmlChar *)"stop-troubleshooting-logs"
#define y_o_ran_troubleshooting_N_troubleshooting_log_generated (const xmlChar *)"troubleshooting-log-generated"


/********************************************************************
* FUNCTION y_o_ran_troubleshooting_init
*
* initialize the o-ran-troubleshooting server instrumentation library
*
* INPUTS:
*    modname == requested module name
*    revision == requested version (NULL for any)
*
* RETURNS:
*     error status
********************************************************************/
extern status_t y_o_ran_troubleshooting_init (
    const xmlChar *modname,
    const xmlChar *revision);

/********************************************************************
* FUNCTION y_o_ran_troubleshooting_init2
*
* SIL init phase 2: non-config data structures
* Called after running config is loaded
*
* RETURNS:
*     error status
********************************************************************/
extern status_t y_o_ran_troubleshooting_init2 (void);

/********************************************************************
* FUNCTION y_o_ran_troubleshooting_cleanup
*    cleanup the server instrumentation library
*
********************************************************************/
extern void y_o_ran_troubleshooting_cleanup (void);

#ifdef __cplusplus
} /* end extern 'C' */
#endif

#endif
