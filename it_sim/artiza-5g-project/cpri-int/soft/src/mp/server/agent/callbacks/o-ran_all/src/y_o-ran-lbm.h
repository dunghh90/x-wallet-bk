
#ifndef _H_y_o_ran_lbm
#define _H_y_o_ran_lbm
/*
 * Copyright (c) 2008 - 2012, Andy Bierman, All Rights Reserved.
 * Copyright (c) 2012 - 2019, YumaWorks, Inc., All Rights Reserved.
 *
 * Unless required by applicable law or agreed to in writing,
 * software distributed under the License is distributed on an
 * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
 * KIND, either express or implied.  See the License for the
 * specific language governing permissions and limitations
 * under the License.
 *

*** Generated by yangdump-sdk 18.10-15

    YumaPro SIL-SA header
    bundle o-ran_all
    module o-ran-lbm
    revision 2019-02-04
    namespace urn:o-ran:lbm:1.0
    organization O-RAN Alliance
    Created: 2019-12-20T02:20:30Z
    CLI parameters:
        defnames true
        format yh
        indent 4
        module ietf-yang-types
        module ietf-inet-types
        module ietf-interfaces
        module iana-if-type
        module ietf-ip
        module iana-hardware
        module ietf-hardware
        module ietf-netconf-acm
        module o-ran-hardware
        module o-ran-software-management
        module o-ran-interfaces
        module o-ran-transceiver
        module o-ran-mplane-int
        module o-ran-dhcp
        module o-ran-compression-factors
        module o-ran-uplane-conf
        module o-ran-module-cap
        module o-ran-processing-element
        module o-ran-performance-management
        module o-ran-fm
        module o-ran-lbm
        module o-ran-supervision
        module o-ran-beamforming
        module o-ran-operations
        module o-ran-usermgmt
        module o-ran-sync
        sil-bundle o-ran_all
        sil-get2
        sil-sa
        unified true

 */

#include <xmlstring.h>

#include "dlq.h"
#include "ncxtypes.h"
#include "op.h"
#include "status.h"
#include "val.h"

#ifdef __cplusplus
extern "C" {
#endif

#define y_o_ran_lbm_M_o_ran_lbm (const xmlChar *)"o-ran-lbm"

#define y_o_ran_lbm_R_o_ran_lbm (const xmlChar *)"2019-02-04"

#define y_o_ran_lbm_N_administrative_state (const xmlChar *)"administrative-state"
#define y_o_ran_lbm_N_component_id (const xmlChar *)"component-id"
#define y_o_ran_lbm_N_component_list (const xmlChar *)"component-list"
#define y_o_ran_lbm_N_id (const xmlChar *)"id"
#define y_o_ran_lbm_N_interface (const xmlChar *)"interface"
#define y_o_ran_lbm_N_loopback (const xmlChar *)"loopback"
#define y_o_ran_lbm_N_mac_address (const xmlChar *)"mac-address"
#define y_o_ran_lbm_N_maintenance_association (const xmlChar *)"maintenance-association"
#define y_o_ran_lbm_N_maintenance_association_end_point (const xmlChar *)"maintenance-association-end-point"
#define y_o_ran_lbm_N_maintenance_domain (const xmlChar *)"maintenance-domain"
#define y_o_ran_lbm_N_md_data_definitions (const xmlChar *)"md-data-definitions"
#define y_o_ran_lbm_N_md_level (const xmlChar *)"md-level"
#define y_o_ran_lbm_N_mep_identifier (const xmlChar *)"mep-identifier"
#define y_o_ran_lbm_N_name (const xmlChar *)"name"
#define y_o_ran_lbm_N_primary_vid (const xmlChar *)"primary-vid"
#define y_o_ran_lbm_N_remote_meps (const xmlChar *)"remote-meps"
#define y_o_ran_lbm_N_replies_transmitted (const xmlChar *)"replies-transmitted"
#define y_o_ran_lbm_N_vid (const xmlChar *)"vid"


/********************************************************************
* FUNCTION y_o_ran_lbm_init
*
* initialize the o-ran-lbm server instrumentation library
*
* INPUTS:
*    modname == requested module name
*    revision == requested version (NULL for any)
*
* RETURNS:
*     error status
********************************************************************/
extern status_t y_o_ran_lbm_init (
    const xmlChar *modname,
    const xmlChar *revision);

/********************************************************************
* FUNCTION y_o_ran_lbm_init2
*
* SIL init phase 2: non-config data structures
* Called after running config is loaded
*
* RETURNS:
*     error status
********************************************************************/
extern status_t y_o_ran_lbm_init2 (void);

/********************************************************************
* FUNCTION y_o_ran_lbm_cleanup
*    cleanup the server instrumentation library
*
********************************************************************/
extern void y_o_ran_lbm_cleanup (void);

#ifdef __cplusplus
} /* end extern 'C' */
#endif

#endif
