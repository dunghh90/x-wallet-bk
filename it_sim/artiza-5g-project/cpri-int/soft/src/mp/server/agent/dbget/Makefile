ifeq ($(BUILD_MODE_DEF), 0)
PREFIX=/usr

# corss platform definition
CROSS_TARGET=/opt/windriver/wrlinux-tiny/10.17.41/sysroots/x86_64-wrlinuxsdk-linux/usr/bin/aarch64-wrs-linux/aarch64-wrs-linux-
DESTDIR=/opt/windriver/wrlinux-tiny/10.17.41/sysroots/aarch64-wrs-linux
CFLAGS=--sysroot=/opt/windriver/wrlinux-tiny/10.17.41/sysroots/aarch64-wrs-linux
LPATH=-L$(DESTDIR)$(PREFIX)/lib64

# local definition
CINC+=-I../com -I../../interface/msg
CFLAGS+=-lpthread
CDEFS+=
LPATH+=-L../com
LIBS+=-lmpmw_saa
LPATH+=-L../../mw/libmpmw_srv
LIBS+=-lmpmw_srv

CINC +=-I. \
    -I../../../public \
    -I../../interface/msg \
    -I../../mw/libmpmw_srv \
    -I$(DESTDIR)$(PREFIX)/include \
    -I$(DESTDIR)$(PREFIX)/include/libxml2 \
    -I$(DESTDIR)$(PREFIX)/include/libxml2/libxml


ifdef USE_WERROR
WERROR=-Werror
else
WERROR=
endif

CWARN=-Wall -Wno-long-long -Wformat-y2k -Winit-self \
	-Wswitch-default -Wunused-parameter \
	-Wextra -Wundef -Wshadow -Wpointer-arith \
	-Wwrite-strings -Wbad-function-cast -Wcast-qual \
	-Waggregate-return -Wstrict-prototypes -Wold-style-definition \
	-Wmissing-prototypes -Wmissing-declarations \
	-Wpacked -Winvalid-pch -Wformat -Wformat-security \
	-Wredundant-decls -Wnested-externs -Winline -std=gnu99 $(WERROR)

CFLAGS += $(CWARN)
CFLAGS += -fPIC
CFLAGS += -DHAS_STRSIGNAL=1

CC=$(CROSS_TARGET)gcc
LINK=$(CC)
LIBTOOL=$(CROSS_TARGET)ar
RANLIB=$(CROSS_TARGET)ranlib

LFLAGS=-lm

CEES = $(wildcard *.c)

HEES = $(wildcard *.h)

################ OBJS RULE #############
OBJS = $(patsubst %.c,$(TARGET)/%.o,$(CEES))

######################## PLATFORM DEFINITIONS #############
PLATFORM_CPP=

.PHONY: all superclean clean test \
        distclean depend lint notabs addheader

######################### MAKE RULES ######################
COMPILE.c= $(CC) $(CFLAGS) $(CPPFLAGS) $(PLATFORM_CPP) \
           $(CINC) $(SUBDIR_CPP) $(TARGET_ARCH) -c


############### SOURCE PROFILE ##############################
# yumaworsk SDK definition
REAL_INC_BASE=$(DESTDIR)$(PREFIX)/include/yumapro

# add the directories inside
SUBDIR_CPP= -I$(REAL_INC_BASE)/platform \
  -I$(REAL_INC_BASE)/ncx \
  -I$(REAL_INC_BASE)/agt \
  -I$(REAL_INC_BASE)/sil-sa \
  -I$(REAL_INC_BASE)/ycontrol \
  -I$(REAL_INC_BASE)/db-api
############### TARGET PROFILE ##############################

TARGET=.
BIN_INST=.
PROG=DU_dbget


##################### LIBRARIES ########################

# all build variants use shared ncx library
# if FULL_STATIC ever supported again
# -lsendbuff \

LIBS += -lyumapro_sil-sa -lyumapro_agt \
	-lyumapro_ycontrol \
	-lyumapro_ncx -lxml2 -lz -lm
LIBS += -ldl -lrt

LIBS += -lyumapro_db-api

############################# MAKE RULES ##################

ALL_TARGETS=$(PROG)

all: $(ALL_TARGETS)

################ DEPENDENCIES #########################
# depend rule must be included after the 'all' make rule

clean:
	rm -f $(OBJS) $(BIN_INST)/$(PROG)


superclean:
	rm -f *~ *.D dependencies $(OBJS) $(BIN_INST)/$(PROG)

test:

distclean: superclean

# this real rule keeps make from deleting the $(OBJS) as
# intermediate files
$(PROG): $(OBJS)
	$(LINK) $(LN_EXTRA) $(CFLAGS) $(CPPFLAGS) $(LFLAGS) $(OBJS) -o $(BIN_INST)/$(PROG) $(LPATH) $(LIBS)


.PHONY: du-agent

# prevent the make program from choking on all the symbols
# that get generated from autogenerated make rules
.NOEXPORT:


$(TARGET)/%.o: %.c
	$(CC) $(CFLAGS) $(CPPFLAGS) $(PLATFORM_CPP) \
        $(CINC) $(SUBDIR_CPP) $(TARGET_ARCH) -c -o $@ $<


#### common cleanup rules



# dependency rule to make temp .D files from .c sources
# all the .D files are collected and appended to the
# appropriate Makefile when 'make depend' is run
# this rule is kept here to make sure it matches COMPILE.c
%.D: %.c
	$(CC) -MM -MG -MT $(TARGET)/$(patsubst %.c,%.o,$<) \
	-Wall -Wcomment $(CPPFLAGS) $(PLATFORM_CPP) $(CINC) \
	$(SUBDIR_CPP) $(TARGET_ARCH) -c $< > $@

endif

ifeq ($(BUILD_MODE_DEF), 1)
PREFIX=/usr

# corss platform definition
CROSS_TARGET=/usr/bin/
DESTDIR=/
CFLAGS=--sysroot=/
LPATH=-L$(DESTDIR)$(PREFIX)/lib64

# local definition
CINC+=-I../com -I../../interface/msg
CFLAGS+=-lpthread
CDEFS+=
LPATH+=-L../com
LIBS+=-lmpmw_saa
LPATH+=-L../../mw/libmpmw_srv
LIBS+=-lmpmw_srv

CINC +=-I. \
    -I../../../public \
    -I../../interface/msg \
    -I../../mw/libmpmw_srv \
    -I$(DESTDIR)$(PREFIX)/include \
    -I$(DESTDIR)$(PREFIX)/include/libxml2 \
    -I$(DESTDIR)$(PREFIX)/include/libxml2/libxml


ifdef USE_WERROR
WERROR=-Werror
else
WERROR=
endif

CWARN=-Wall -Wno-long-long -Wformat-y2k -Winit-self \
	-Wswitch-default -Wunused-parameter \
	-Wextra -Wundef -Wshadow -Wpointer-arith \
	-Wwrite-strings -Wbad-function-cast -Wcast-qual \
	-Waggregate-return -Wstrict-prototypes -Wold-style-definition \
	-Wmissing-prototypes -Wmissing-declarations \
	-Wpacked -Winvalid-pch -Wformat -Wformat-security \
	-Wredundant-decls -Wnested-externs -Winline -std=gnu99 $(WERROR)

CFLAGS += $(CWARN)
CFLAGS += -fPIC
CFLAGS += -DHAS_STRSIGNAL=1

CC=$(CROSS_TARGET)gcc
LINK=$(CC)
LIBTOOL=$(CROSS_TARGET)ar
RANLIB=$(CROSS_TARGET)ranlib

LFLAGS=-lm

CEES = $(wildcard *.c)

HEES = $(wildcard *.h)

################ OBJS RULE #############
OBJS = $(patsubst %.c,$(TARGET)/%.o,$(CEES))

######################## PLATFORM DEFINITIONS #############
PLATFORM_CPP=

.PHONY: all superclean clean test \
        distclean depend lint notabs addheader

######################### MAKE RULES ######################
COMPILE.c= $(CC) $(CFLAGS) $(CPPFLAGS) $(PLATFORM_CPP) \
           $(CINC) $(SUBDIR_CPP) $(TARGET_ARCH) -c


############### SOURCE PROFILE ##############################
# yumaworsk SDK definition
REAL_INC_BASE=$(DESTDIR)$(PREFIX)/include/yumapro

# add the directories inside
SUBDIR_CPP= -I$(REAL_INC_BASE)/platform \
  -I$(REAL_INC_BASE)/ncx \
  -I$(REAL_INC_BASE)/agt \
  -I$(REAL_INC_BASE)/sil-sa \
  -I$(REAL_INC_BASE)/ycontrol \
  -I$(REAL_INC_BASE)/db-api
############### TARGET PROFILE ##############################

TARGET=.
BIN_INST=.
PROG=DU_dbget


##################### LIBRARIES ########################

# all build variants use shared ncx library
# if FULL_STATIC ever supported again
# -lsendbuff \

LIBS += -lyumapro_sil-sa -lyumapro_agt \
	-lyumapro_ycontrol \
	-lyumapro_ncx -lxml2 -lz -lm
LIBS += -ldl -lrt

LIBS += -lyumapro_db-api

############################# MAKE RULES ##################

ALL_TARGETS=$(PROG)

all: $(ALL_TARGETS)

################ DEPENDENCIES #########################
# depend rule must be included after the 'all' make rule

clean:
	rm -f $(OBJS) $(BIN_INST)/$(PROG)


superclean:
	rm -f *~ *.D dependencies $(OBJS) $(BIN_INST)/$(PROG)

test:

distclean: superclean

# this real rule keeps make from deleting the $(OBJS) as
# intermediate files
$(PROG): $(OBJS)
	$(LINK) $(LN_EXTRA) $(CFLAGS) $(CPPFLAGS) $(LFLAGS) $(OBJS) -o $(BIN_INST)/$(PROG) $(LPATH) $(LIBS)


.PHONY: du-agent

# prevent the make program from choking on all the symbols
# that get generated from autogenerated make rules
.NOEXPORT:


$(TARGET)/%.o: %.c
	$(CC) $(CFLAGS) $(CPPFLAGS) $(PLATFORM_CPP) \
        $(CINC) $(SUBDIR_CPP) $(TARGET_ARCH) -c -o $@ $<


#### common cleanup rules



# dependency rule to make temp .D files from .c sources
# all the .D files are collected and appended to the
# appropriate Makefile when 'make depend' is run
# this rule is kept here to make sure it matches COMPILE.c
%.D: %.c
	$(CC) -MM -MG -MT $(TARGET)/$(patsubst %.c,%.o,$<) \
	-Wall -Wcomment $(CPPFLAGS) $(PLATFORM_CPP) $(CINC) \
	$(SUBDIR_CPP) $(TARGET_ARCH) -c $< > $@

endif